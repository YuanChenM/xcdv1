<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.so.logic.StockLogic">
    <select id="findProductStockList" parameterType="BasePageParam" resultType="com.msk.so.bean.ProductStock">
        SELECT
        <include refid="selectSqlSl"/>
        ,10 AS price
        ,0 AS activeQty
        ,'10' AS priceCyclePeriod
        ,'1' AS orderLevelCode
        ,'1' AS orderLevelName
        ,MD.LGCSNAME AS lgcsName
        FROM SO_STOCK_SL AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        ORDER BY STOCK.STOCK_ID
        <if test="paging==true">
            LIMIT #{startPos},#{pageSize}
        </if>
    </select>
    <select id="countProductStock" parameterType="BasePageParam" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM SO_STOCK_SL AS STOCK
    </select>
    <sql id="selectSqlSl">
        STOCK_ID AS stockId,
        LGCS_CODE AS lgcsCode,
        LGCS_NAME AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        STOCK_TYPE AS stockType,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        CLASSES_CODE AS classesCode,
        CLASSES_NAME AS classesName,
        BREED_CODE AS breedCode,
        BREED_NAME AS breedName,
        FEATURE_CODE AS featureCode,
        FEATURE_NAME AS featureName,
        NORMS_CODE AS normsCode,
        NORMS_NAME AS normsName,
        PD_CODE AS pdCode,
        PD_NAME AS pdName,
        PD_LEVEL AS pdLevel,
        UNIT AS unit,
        PACKING_VOLUME AS packingVolume,
        -- WEIGHT AS weight,
        -- VOLUME AS volume,
        STOCK_QTY AS stockQty
    </sql>
    <sql id="selectSqlSupp">
        STOCK_ID AS stockId,
        LGCS_CODE AS lgcsCode,
        LGCS_NAME AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        SUPPLY_PLATFORM AS supplyPlatform,
        STOCK_TYPE AS stockType,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        SUPPLIER_CODE AS supplierCode,
        SUPPLIER_NAME AS supplierName,
        CLASSES_CODE AS classesCode,
        CLASSES_NAME AS classesName,
        BREED_CODE AS breedCode,
        BREED_NAME AS breedName,
        FEATURE_CODE AS featureCode,
        FEATURE_NAME AS featureName,
        NORMS_CODE AS normsCode,
        NORMS_NAME AS normsName,
        PD_CODE AS pdCode,
        PD_NAME AS pdName,
        PD_LEVEL AS pdLevel,
        UNIT AS unit,
        PACKING_VOLUME AS packingVolume,
        WEIGHT AS weight,
        VOLUME AS volume,
        STOCK_QTY AS stockQty
    </sql>
    <sql id="whereConditionSl">
        <where>
            <if test="stockNum != null">
                AND STOCK_QTY > #{stockNum}
            </if>
            <if test="pdCode != null and pdCode != ''">
                AND PD_CODE = #{pdCode}
            </if>
            <if test="lgcsCode != null and lgcsCode != ''">
                AND LGCS_CODE = LEFT(#{lgcsCode}, 2)
            </if>
            <if test="slCode != null and slCode != ''">
                AND SL_CODE = #{slCode}
            </if>
            <if test="supplyPlatform != null">
                AND SALE_PLATFORM = #{supplyPlatform}
            </if>
        </where>
    </sql>
    <sql id="ConditionSl">
            AND a.LGCS_CODE = LEFT(#{lgcsCode}, 2)
            AND a.SL_CODE = #{slCode}
            AND a.PD_CODE = #{pdCode}
    </sql>
    <sql id="whereConditionSupp">
        <where>
            <if test="stockNum != null">
                AND STOCK_QTY > #{stockNum}
            </if>
            <if test="lgcsCode != null and lgcsCode != ''">
                  AND LGCS_CODE = LEFT(#{lgcsCode}, 2)
            </if>
            <if test="slCode != null and slCode != ''">
                  AND SL_CODE = #{slCode}
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                  AND SUPPLIER_CODE = #{supplierCode}
            </if>
            <if test="pdCode != null and pdCode != ''">
                  AND PD_CODE = #{pdCode}
            </if>
            <if test="supplyPlatform != null">
                AND SUPPLY_PLATFORM = #{supplyPlatform}
            </if>
        </where>
    </sql>
    <sql id="ConditionSupp">
            AND a.LGCS_CODE = LEFT(#{lgcsCode}, 2)
            AND a.SL_CODE = #{slCode}
            AND a.SUPPLIER_CODE = #{supplierCode}
            AND a.PD_CODE = #{pdCode}
    </sql>
    <select id="getSoStockSl" parameterType="BaseParam" resultType="com.msk.core.entity.SoStockSl">
        SELECT
        <include refid="selectSqlSl"/>
        FROM SO_STOCK_SL
        <include refid="whereConditionSl"/>
    </select>
    <select id="getSoStockSupp" parameterType="BaseParam" resultType="com.msk.core.entity.SoStockSupp">
        SELECT
        <include refid="selectSqlSupp"/>
        FROM SO_STOCK_SP
        <include refid="whereConditionSupp"/>
    </select>
    <select id="countSlStocked" parameterType="BaseParam" resultType="int">
        SELECT count(1)
        FROM so_stock_sl a
        INNER JOIN so_stock_occ_sl b
         ON a.LGCS_CODE = b.LGCS_CODE
        AND a.SL_CODE = b.SL_CODE
        AND a.PD_CODE = b.PD_CODE
        WHERE (a.STOCK_QTY - b.OCCUPY_QTY) >= #{stockNum}
        <include refid="ConditionSl"/>
    </select>
    <!--检查卖家是否有库存-->
    <select id="countSoStockSl" parameterType="BaseParam" resultType="int">
        SELECT count(1)
        FROM so_stock_sl
        <include refid="whereConditionSl"/>
    </select>
    <update id="frozenStockSl" parameterType="BaseParam">
        update so_stock_occ_sl
        set OCCUPY_QTY = OCCUPY_QTY + #{stockNum}
        <include refid="whereConditionSl"/>
    </update>
    <update id="cancelFrozenStockSl" parameterType="BaseParam">
        update so_stock_occ_sl
        set OCCUPY_QTY = OCCUPY_QTY - #{stockNum},
        UPD_TIME = #{updTime},
        UPD_ID = #{updId},
        VER = VER + 1
        <include refid="whereConditionSl"/>
    </update>
    <update id="addStockSlQty" parameterType="BaseParam">
        update so_stock_sl
        set STOCK_QTY = STOCK_QTY + #{stockNum}
        <include refid="whereConditionSl"/>
    </update>

    <select id="countSuppStocked" parameterType="BaseParam" resultType="int">
        SELECT count(1)
        FROM so_stock_sp  a
        WHERE a.STOCK_QTY >= #{stockNum}
        <include refid="ConditionSupp"/>
    </select>
    <!--检查供应商是否有库存-->
    <select id="countSoStockSupp" parameterType="BaseParam" resultType="int">
        SELECT count(1)
        FROM SO_STOCK_SP
        <include refid="whereConditionSupp"/>
    </select>
    <update id="frozenStockSupp" parameterType="BaseParam">
        update so_stock_occ_supp
        set OCCUPY_QTY = OCCUPY_QTY + #{stockNum}
        <include refid="whereConditionSupp"/>
    </update>
    <update id="cancelFrozenStockSupp" parameterType="BaseParam">
        update so_stock_occ_supp
        set OCCUPY_QTY = OCCUPY_QTY - #{stockNum}
        <include refid="whereConditionSupp"/>
    </update>
    <update id="addStockSuppQty" parameterType="BaseParam">
        update so_stock_supp
        set STOCK_QTY = STOCK_QTY + #{stockNum}
        <include refid="whereConditionSupp"/>
    </update>

    <insert id="insertStockSl" parameterType="BaseParam">
        INSERT INTO so_stock_sl
        (
        STOCK_ID,
        LGCS_CODE,
        <if test="lgcsName!=null">
            LGCS_NAME,
        </if>
        <if test="warehouseCode!=null">
            WAREHOUSE_CODE,
        </if>
        <if test="warehouseName!=null">
            WAREHOUSE_NAME,
        </if>
        <if test="stockType!=null">
            STOCK_TYPE,
        </if>
        SL_CODE,
        <if test="slName!=null">
            SL_NAME,
        </if>
        <if test="classesCode!=null">
            CLASSES_CODE,
        </if>
        <if test="classesName!=null">
            CLASSES_NAME,
        </if>
        <if test="breedCode!=null">
            BREED_CODE,
        </if>
        <if test="breedName!=null">
            BREED_NAME,
        </if>
        <if test="featureCode!=null">
            FEATURE_CODE,
        </if>
        <if test="featureName!=null">
            FEATURE_NAME,
        </if>
        <if test="normsCode!=null">
            NORMS_CODE,
        </if>
        <if test="normsName!=null">
            NORMS_NAME,
        </if>
        <if test="pdCode!=null">
            PD_CODE,
        </if>
        <if test="pdName!=null">
            PD_NAME,
        </if>
        <if test="pdLevel!=null">
            PD_LEVEL,
        </if>
        <if test="unit!=null">
            UNIT,
        </if>
        <if test="packingVolume!=null">
            PACKING_VOLUME,
        </if>
        <if test="weight!=null">
            WEIGHT,
        </if>
        <if test="volume!=null">
            VOLUME,
        </if>
        STOCK_QTY,
        DEL_FLG,
        CRT_ID,
        CRT_TIME,
        UPD_ID,
        UPD_TIME,
        ACT_ID,
        ACT_TIME,
        VER
        )
        SELECT
        ifnull(MAX(STOCK_ID), 0) + 1,
        #{lgcsCode},
        <if test="lgcsName!=null">
            #{lgcsName},
        </if>
        <if test="warehouseCode!=null">
            #{warehouseCode},
        </if>
        <if test="warehouseName!=null">
            #{warehouseName},
        </if>
        <if test="stockType!=null">
            #{stockType},
        </if>
        #{slCode},
        <if test="slName!=null">
            #{slName},
        </if>
        <if test="classesCode!=null">
            #{classesCode},
        </if>
        <if test="classesName!=null">
            #{classesName},
        </if>
        <if test="breedCode!=null">
            #{breedCode},
        </if>
        <if test="breedName!=null">
            #{breedName},
        </if>
        <if test="featureCode!=null">
            #{featureCode},
        </if>
        <if test="featureName!=null">
            #{featureName},
        </if>
        <if test="normsCode!=null">
            #{normsCode},
        </if>
        <if test="normsName!=null">
            #{normsName},
        </if>
        <if test="pdCode!=null">
            #{pdCode},
        </if>
        <if test="pdName!=null">
            #{pdName},
        </if>
        <if test="pdLevel!=null">
            #{pdLevel},
        </if>
        <if test="unit!=null">
            #{unit},
        </if>
        <if test="packingVolume!=null">
            #{packingVolume},
        </if>
        <if test="weight!=null">
            #{weight},
        </if>
        <if test="volume!=null">
            #{volume},
        </if>
        #{stockNum},
        #{delFlg},
        #{crtId},
        #{crtTime},
        #{updId},
        #{updTime},
        #{actId},
        #{actTime},
        #{ver}
        FROM so_stock_sl
    </insert>

    <insert id="insertStockSupp" parameterType="BaseParam">
        INSERT INTO so_stock_supp
        (
        STOCK_ID,
        LGCS_CODE,
        <if test="lgcsName!=null">
            LGCS_NAME,
        </if>
        <if test="warehouseCode!=null">
            WAREHOUSE_CODE,
        </if>
        <if test="warehouseName!=null">
            WAREHOUSE_NAME,
        </if>
        <if test="stockType!=null">
            STOCK_TYPE,
        </if>
        SL_CODE,
        <if test="slName!=null">
            SL_NAME,
        </if>
        SUPPLIER_CODE,
        <if test="supplierName!=null">
            SUPPLIER_NAME,
        </if>
        <if test="classesCode!=null">
            CLASSES_CODE,
        </if>
        <if test="classesName!=null">
            CLASSES_NAME,
        </if>
        <if test="breedCode!=null">
            BREED_CODE,
        </if>
        <if test="breedName!=null">
            BREED_NAME,
        </if>
        <if test="featureCode!=null">
            FEATURE_CODE,
        </if>
        <if test="featureName!=null">
            FEATURE_NAME,
        </if>
        <if test="normsCode!=null">
            NORMS_CODE,
        </if>
        <if test="normsName!=null">
            NORMS_NAME,
        </if>
        <if test="pdCode!=null">
            PD_CODE,
        </if>
        <if test="pdName!=null">
            PD_NAME,
        </if>
        <if test="pdLevel!=null">
            PD_LEVEL,
        </if>
        <if test="unit!=null">
            UNIT,
        </if>
        <if test="packingVolume!=null">
            PACKING_VOLUME,
        </if>
        <if test="weight!=null">
            WEIGHT,
        </if>
        <if test="volume!=null">
            VOLUME,
        </if>
        STOCK_QTY,
        DEL_FLG,
        CRT_ID,
        CRT_TIME,
        UPD_ID,
        UPD_TIME,
        ACT_ID,
        ACT_TIME,
        VER
        )
        SELECT
        ifnull(MAX(STOCK_ID), 0) + 1,
        #{lgcsCode},
        <if test="lgcsName!=null">
            #{lgcsName},
        </if>
        <if test="warehouseCode!=null">
            #{warehouseCode},
        </if>
        <if test="warehouseName!=null">
            #{warehouseName},
        </if>
        <if test="stockType!=null">
            #{stockType},
        </if>
        #{slCode},
        <if test="slName!=null">
            #{slName},
        </if>
        #{supplierCode},
        <if test="supplierName!=null">
            #{supplierName},
        </if>
        <if test="classesCode!=null">
            #{classesCode},
        </if>
        <if test="classesName!=null">
            #{classesName},
        </if>
        <if test="breedCode!=null">
            #{breedCode},
        </if>
        <if test="breedName!=null">
            #{breedName},
        </if>
        <if test="featureCode!=null">
            #{featureCode},
        </if>
        <if test="featureName!=null">
            #{featureName},
        </if>
        <if test="normsCode!=null">
            #{normsCode},
        </if>
        <if test="normsName!=null">
            #{normsName},
        </if>
        <if test="pdCode!=null">
            #{pdCode},
        </if>
        <if test="pdName!=null">
            #{pdName},
        </if>
        <if test="pdLevel!=null">
            #{pdLevel},
        </if>
        <if test="unit!=null">
            #{unit},
        </if>
        <if test="packingVolume!=null">
            #{packingVolume},
        </if>
        <if test="weight!=null">
            #{weight},
        </if>
        <if test="volume!=null">
            #{volume},
        </if>
        #{stockNum},
        #{delFlg},
        #{crtId},
        #{crtTime},
        #{updId},
        #{updTime},
        #{actId},
        #{actTime},
        #{ver}
        FROM so_stock_supp
    </insert>


    <insert id="insertOccStockSl" parameterType="BaseParam">
        INSERT INTO so_stock_occ_sl
        (
        STOCK_ID,
        LGCS_CODE,
        <if test="lgcsName!=null">
            LGCS_NAME,
        </if>
        <if test="warehouseCode!=null">
            WAREHOUSE_CODE,
        </if>
        <if test="warehouseName!=null">
            WAREHOUSE_NAME,
        </if>
        <if test="stockType!=null">
            STOCK_TYPE,
        </if>
        SL_CODE,
        <if test="slName!=null">
            SL_NAME,
        </if>
        <if test="classesCode!=null">
            CLASSES_CODE,
        </if>
        <if test="classesName!=null">
            CLASSES_NAME,
        </if>
        <if test="breedCode!=null">
            BREED_CODE,
        </if>
        <if test="breedName!=null">
            BREED_NAME,
        </if>
        <if test="featureCode!=null">
            FEATURE_CODE,
        </if>
        <if test="featureName!=null">
            FEATURE_NAME,
        </if>
        <if test="normsCode!=null">
            NORMS_CODE,
        </if>
        <if test="normsName!=null">
            NORMS_NAME,
        </if>
        <if test="pdCode!=null">
            PD_CODE,
        </if>
        <if test="pdName!=null">
            PD_NAME,
        </if>
        <if test="pdLevel!=null">
            PD_LEVEL,
        </if>
        <if test="unit!=null">
            UNIT,
        </if>
        <if test="packingVolume!=null">
            PACKING_VOLUME,
        </if>
        <if test="weight!=null">
            WEIGHT,
        </if>
        <if test="volume!=null">
            VOLUME,
        </if>
        OCCUPY_QTY,
        DEL_FLG,
        CRT_ID,
        CRT_TIME,
        UPD_ID,
        UPD_TIME,
        ACT_ID,
        ACT_TIME,
        VER
        )
        SELECT
        ifnull(MAX(STOCK_ID), 0) + 1,
        #{lgcsCode},
        <if test="lgcsName!=null">
            #{lgcsName},
        </if>
        <if test="warehouseCode!=null">
            #{warehouseCode},
        </if>
        <if test="warehouseName!=null">
            #{warehouseName},
        </if>
        <if test="stockType!=null">
            #{stockType},
        </if>
        #{slCode},
        <if test="slName!=null">
            #{slName},
        </if>
        <if test="classesCode!=null">
            #{classesCode},
        </if>
        <if test="classesName!=null">
            #{classesName},
        </if>
        <if test="breedCode!=null">
            #{breedCode},
        </if>
        <if test="breedName!=null">
            #{breedName},
        </if>
        <if test="featureCode!=null">
            #{featureCode},
        </if>
        <if test="featureName!=null">
            #{featureName},
        </if>
        <if test="normsCode!=null">
            #{normsCode},
        </if>
        <if test="normsName!=null">
            #{normsName},
        </if>
        <if test="pdCode!=null">
            #{pdCode},
        </if>
        <if test="pdName!=null">
            #{pdName},
        </if>
        <if test="pdLevel!=null">
            #{pdLevel},
        </if>
        <if test="unit!=null">
            #{unit},
        </if>
        <if test="packingVolume!=null">
            #{packingVolume},
        </if>
        <if test="weight!=null">
            #{weight},
        </if>
        <if test="volume!=null">
            #{volume},
        </if>
        0,
        #{delFlg},
        #{crtId},
        #{crtTime},
        #{updId},
        #{updTime},
        #{actId},
        #{actTime},
        #{ver}
        FROM so_stock_occ_sl
    </insert>

    <insert id="insertStockOccSupp" parameterType="BaseParam">
        INSERT INTO so_stock_occ_supp
        (
        STOCK_ID,
        LGCS_CODE,
        <if test="lgcsName!=null">
            LGCS_NAME,
        </if>
        <if test="warehouseCode!=null">
            WAREHOUSE_CODE,
        </if>
        <if test="warehouseName!=null">
            WAREHOUSE_NAME,
        </if>
        <if test="stockType!=null">
            STOCK_TYPE,
        </if>
        SL_CODE,
        <if test="slName!=null">
            SL_NAME,
        </if>
        SUPPLIER_CODE,
        <if test="supplierName!=null">
            SUPPLIER_NAME,
        </if>
        <if test="classesCode!=null">
            CLASSES_CODE,
        </if>
        <if test="classesName!=null">
            CLASSES_NAME,
        </if>
        <if test="breedCode!=null">
            BREED_CODE,
        </if>
        <if test="breedName!=null">
            BREED_NAME,
        </if>
        <if test="featureCode!=null">
            FEATURE_CODE,
        </if>
        <if test="featureName!=null">
            FEATURE_NAME,
        </if>
        <if test="normsCode!=null">
            NORMS_CODE,
        </if>
        <if test="normsName!=null">
            NORMS_NAME,
        </if>
        <if test="pdCode!=null">
            PD_CODE,
        </if>
        <if test="pdName!=null">
            PD_NAME,
        </if>
        <if test="pdLevel!=null">
            PD_LEVEL,
        </if>
        <if test="unit!=null">
            UNIT,
        </if>
        <if test="packingVolume!=null">
            PACKING_VOLUME,
        </if>
        <if test="weight!=null">
            WEIGHT,
        </if>
        <if test="volume!=null">
            VOLUME,
        </if>
        OCCUPY_QTY,
        DEL_FLG,
        CRT_ID,
        CRT_TIME,
        UPD_ID,
        UPD_TIME,
        ACT_ID,
        ACT_TIME,
        VER
        )
        SELECT
        ifnull(MAX(STOCK_ID), 0) + 1,
        #{lgcsCode},
        <if test="lgcsName!=null">
            #{lgcsName},
        </if>
        <if test="warehouseCode!=null">
            #{warehouseCode},
        </if>
        <if test="warehouseName!=null">
            #{warehouseName},
        </if>
        <if test="stockType!=null">
            #{stockType},
        </if>
        #{slCode},
        <if test="slName!=null">
            #{slName},
        </if>
        #{supplierCode},
        <if test="supplierName!=null">
            #{supplierName},
        </if>
        <if test="classesCode!=null">
            #{classesCode},
        </if>
        <if test="classesName!=null">
            #{classesName},
        </if>
        <if test="breedCode!=null">
            #{breedCode},
        </if>
        <if test="breedName!=null">
            #{breedName},
        </if>
        <if test="featureCode!=null">
            #{featureCode},
        </if>
        <if test="featureName!=null">
            #{featureName},
        </if>
        <if test="normsCode!=null">
            #{normsCode},
        </if>
        <if test="normsName!=null">
            #{normsName},
        </if>
        <if test="pdCode!=null">
            #{pdCode},
        </if>
        <if test="pdName!=null">
            #{pdName},
        </if>
        <if test="pdLevel!=null">
            #{pdLevel},
        </if>
        <if test="unit!=null">
            #{unit},
        </if>
        <if test="packingVolume!=null">
            #{packingVolume},
        </if>
        <if test="weight!=null">
            #{weight},
        </if>
        <if test="volume!=null">
            #{volume},
        </if>
        0,
        #{delFlg},
        #{crtId},
        #{crtTime},
        #{updId},
        #{updTime},
        #{actId},
        #{actTime},
        #{ver}
        FROM so_stock_occ_supp
    </insert>

    <insert id ="insertSoStockRecord" parameterType="BaseParam" >
          INSERT INTO   so_stock_record(
                        so_stock_record.STOCK_ID,
                        so_stock_record.FLOW_ID,
                        so_stock_record.PD_CODE,
                        so_stock_record.SUPPLIER_CODE,
                        so_stock_record.SL_CODE,
                        so_stock_record.QTY,
                        so_stock_record.TYPE,
                        so_stock_record.DEL_FLG,
                        so_stock_record.CRT_ID,
                        so_stock_record.CRT_TIME,
                        so_stock_record.UPD_ID,
                        so_stock_record.UPD_TIME,
                        so_stock_record.ACT_ID,
                        so_stock_record.ACT_TIME,
                        so_stock_record.VER)
               VALUES  (#{stockId},
                        #{flowId},
                        #{pdCode},
                        #{supplierCode},
                        #{slCode},
                        abs(#{stockNum}),
                        #{changeType},
                        0,
                        #{crtId},
                        #{crtTime},
                        #{updId},
                        #{crtTime},
                        #{actId},
                        #{crtTime},
                        1)
    </insert>

    <insert id="insertSoStockSpHistory" parameterType="BaseParam">
        INSERT INTO     so_stock_sp_history(
                        so_stock_sp_history.STOCK_ID,
                        so_stock_sp_history.history_date,
                        so_stock_sp_history.LGCS_CODE,
                        so_stock_sp_history.LGCS_NAME,
                        so_stock_sp_history.WAREHOUSE_CODE,
                        so_stock_sp_history.WAREHOUSE_NAME,
                        so_stock_sp_history.SUPPLY_PLATFORM,
                        so_stock_sp_history.STOCK_TYPE,
                        so_stock_sp_history.SL_CODE,
                        so_stock_sp_history.SL_NAME,
                        so_stock_sp_history.SUPPLIER_CODE,
                        so_stock_sp_history.SUPPLIER_NAME,
                        so_stock_sp_history.CLASSES_CODE,
                        so_stock_sp_history.CLASSES_NAME,
                        so_stock_sp_history.BREED_CODE,
                        so_stock_sp_history.BREED_NAME,
                        so_stock_sp_history.FEATURE_CODE,
                        so_stock_sp_history.FEATURE_NAME,
                        so_stock_sp_history.NORMS_CODE,
                        so_stock_sp_history.NORMS_NAME,
                        so_stock_sp_history.PD_CODE,
                        so_stock_sp_history.PD_NAME,
                        so_stock_sp_history.PD_LEVEL,
                        so_stock_sp_history.UNIT,
                        so_stock_sp_history.PACKING_VOLUME,
                        so_stock_sp_history.WEIGHT,
                        so_stock_sp_history.VOLUME,
                        so_stock_sp_history.STOCK_QTY,
                        so_stock_sp_history.DEL_FLG,
                        so_stock_sp_history.CRT_ID,
                        so_stock_sp_history.CRT_TIME,
                        so_stock_sp_history.UPD_ID,
                        so_stock_sp_history.UPD_TIME,
                        so_stock_sp_history.ACT_ID,
                        so_stock_sp_history.ACT_TIME,
                        so_stock_sp_history.VER)
           SELECT       @i:=@i+1 AS STOCK_ID,
                        #{historyDate},
                        so_stock_sp.LGCS_CODE,
                        so_stock_sp.LGCS_NAME,
                        so_stock_sp.WAREHOUSE_CODE,
                        so_stock_sp.WAREHOUSE_NAME,
                        so_stock_sp.SUPPLY_PLATFORM,
                        so_stock_sp.STOCK_TYPE,
                        so_stock_sp.SL_CODE,
                        so_stock_sp.SL_NAME,
                        so_stock_sp.SUPPLIER_CODE,
                        so_stock_sp.SUPPLIER_NAME,
                        so_stock_sp.CLASSES_CODE,
                        so_stock_sp.CLASSES_NAME,
                        so_stock_sp.BREED_CODE,
                        so_stock_sp.BREED_NAME,
                        so_stock_sp.FEATURE_CODE,
                        so_stock_sp.FEATURE_NAME,
                        so_stock_sp.NORMS_CODE,
                        so_stock_sp.NORMS_NAME,
                        so_stock_sp.PD_CODE,
                        so_stock_sp.PD_NAME,
                        so_stock_sp.PD_LEVEL,
                        so_stock_sp.UNIT,
                        so_stock_sp.PACKING_VOLUME,
                        so_stock_sp.WEIGHT,
                        so_stock_sp.VOLUME,
                        so_stock_sp.STOCK_QTY,
                        so_stock_sp.DEL_FLG,
                        so_stock_sp.CRT_ID,
                        so_stock_sp.CRT_TIME,
                        so_stock_sp.UPD_ID,
                        so_stock_sp.UPD_TIME,
                        so_stock_sp.ACT_ID,
                        so_stock_sp.ACT_TIME,
                        so_stock_sp.VER
              FROM      so_stock_sp,
                        (SELECT @i :=(SELECT
                         CASE
                         WHEN MAX(STOCK_ID) IS NULL THEN 1
                         ELSE MAX(STOCK_ID) END
                         FROM so_stock_sp_history)) historyStockId
    </insert>

    <insert id ="insertSoStockSp" parameterType="BaseParam" >
        INSERT INTO     so_stock_sp(
                        so_stock_sp.STOCK_ID,
                        so_stock_sp.LGCS_CODE,
                        so_stock_sp.LGCS_NAME,
                        so_stock_sp.WAREHOUSE_CODE,
                        so_stock_sp.WAREHOUSE_NAME,
                        so_stock_sp.SUPPLY_PLATFORM,
                        so_stock_sp.STOCK_TYPE,
                        so_stock_sp.SL_CODE,
                        so_stock_sp.SL_NAME,
                        so_stock_sp.SUPPLIER_CODE,
                        so_stock_sp.SUPPLIER_NAME,
                        so_stock_sp.CLASSES_CODE,
                        so_stock_sp.CLASSES_NAME,
                        so_stock_sp.BREED_CODE,
                        so_stock_sp.BREED_NAME,
                        so_stock_sp.FEATURE_CODE,
                        so_stock_sp.FEATURE_NAME,
                        so_stock_sp.NORMS_CODE,
                        so_stock_sp.NORMS_NAME,
                        so_stock_sp.PD_CODE,
                        so_stock_sp.PD_NAME,
                        so_stock_sp.PD_LEVEL,
                        so_stock_sp.UNIT,
                        so_stock_sp.PACKING_VOLUME,
                        so_stock_sp.WEIGHT,
                        so_stock_sp.VOLUME,
                        so_stock_sp.STOCK_QTY,
                        so_stock_sp.DEL_FLG,
                        so_stock_sp.CRT_ID,
                        so_stock_sp.CRT_TIME,
                        so_stock_sp.UPD_ID,
                        so_stock_sp.UPD_TIME,
                        so_stock_sp.ACT_ID,
                        so_stock_sp.ACT_TIME,
                        so_stock_sp.VER)
            VALUES      (#{stockId},
                        #{lgcsCode},
                        #{lgcsName},
                        #{warehouseCode},
                        #{warehouseName},
                        #{supplyPlatform},
                        #{stockType},
                        #{slCode},
                        #{slName},
                        #{supplierCode},
                        #{supplierName},
                        #{classesCode},
                        #{classesName},
                        #{breedCode},
                        #{breedName},
                        #{featureCode},
                        #{featureName},
                        #{normsCode},
                        #{normsName},
                        #{pdCode},
                        #{pdName},
                        #{pdLevel},
                        #{unit},
                        #{packingVolume},
                        #{weight},
                        #{volume},
                        #{stockNum},
                        0,
                        #{crtId},
                        #{crtTime},
                        #{updId},
                        #{crtTime},
                        #{actId},
                        #{crtTime},
                        1)
    </insert>

    <update id ="updateSoStockSp" parameterType="BaseParam" >
             UPDATE     so_stock_sp
                SET     so_stock_sp.STOCK_QTY = so_stock_sp.STOCK_QTY + #{stockNum},
                        so_stock_sp.CRT_ID = #{crtId},
                        so_stock_sp.CRT_TIME = #{updTime},
                        so_stock_sp.UPD_ID = #{updId},
                        so_stock_sp.UPD_TIME = #{updTime},
                        so_stock_sp.ACT_ID = #{actId},
                        so_stock_sp.ACT_TIME = #{updTime}
              WHERE     so_stock_sp.LGCS_CODE = #{lgcsCode}
                AND     so_stock_sp.WAREHOUSE_CODE = #{warehouseCode}
                AND     so_stock_sp.SUPPLY_PLATFORM = #{supplyPlatform}
                AND     so_stock_sp.STOCK_TYPE = #{stockType}
                AND     so_stock_sp.SL_CODE = #{slCode}
                AND     so_stock_sp.SUPPLIER_CODE = #{supplierCode}
                AND     so_stock_sp.PD_CODE = #{pdCode}
    </update>

    <insert id ="insertSoStockSl" parameterType="BaseParam">
        INSERT INTO so_stock_sl(so_stock_sl.STOCK_ID,
                    so_stock_sl.sale_platform,
                    so_stock_sl.LGCS_CODE,
                    so_stock_sl.LGCS_NAME,
                    so_stock_sl.WAREHOUSE_CODE,
                    so_stock_sl.WAREHOUSE_NAME,
                    so_stock_sl.STOCK_TYPE,
                    so_stock_sl.SL_CODE,
                    so_stock_sl.SL_NAME,
                    so_stock_sl.CLASSES_CODE,
                    so_stock_sl.CLASSES_NAME,
                    so_stock_sl.BREED_CODE,
                    so_stock_sl.BREED_NAME,
                    so_stock_sl.FEATURE_CODE,
                    so_stock_sl.FEATURE_NAME,
                    so_stock_sl.NORMS_CODE,
                    so_stock_sl.NORMS_NAME,
                    so_stock_sl.PD_CODE,
                    so_stock_sl.PD_NAME,
                    so_stock_sl.PD_LEVEL,
                    so_stock_sl.UNIT,
                    so_stock_sl.PACKING_VOLUME,
                    so_stock_sl.WEIGHT,
                    so_stock_sl.VOLUME,
                    so_stock_sl.STOCK_QTY,
                    so_stock_sl.DEL_FLG,
                    so_stock_sl.CRT_ID,
                    so_stock_sl.CRT_TIME,
                    so_stock_sl.UPD_ID,
                    so_stock_sl.UPD_TIME,
                    so_stock_sl.ACT_ID,
                    so_stock_sl.ACT_TIME,
                    so_stock_sl.VER)
             VALUES (#{stockId},
                    #{supplyPlatform},
                    #{lgcsCode},
                    #{lgcsName},
                    #{warehouseCode},
                    #{warehouseName},
                    #{stockType},
                    #{slCode},
                    #{slName},
                    #{classesCode},
                    #{classesName},
                    #{breedCode},
                    #{breedName},
                    #{featureCode},
                    #{featureName},
                    #{normsCode},
                    #{normsName},
                    #{pdCode},
                    #{pdName},
                    #{pdLevel},
                    #{unit},
                    #{packingVolume},
                    #{weight},
                    #{volume},
                    #{stockNum},
                    0,
                    #{crtId},
                    #{crtTime},
                    #{updId},
                    #{crtTime},
                    #{actId},
                    #{crtTime},
                    1)
    </insert>
    <update id ="updateSoStockSl" parameterType="BaseParam">
           UPDATE   so_stock_sl
              SET   so_stock_sl.STOCK_QTY = so_stock_sl.STOCK_QTY + #{stockNum},
                    so_stock_sl.CRT_ID = #{crtId},
                    so_stock_sl.CRT_TIME = #{updTime},
                    so_stock_sl.UPD_ID = #{updId},
                    so_stock_sl.UPD_TIME = #{updTime},
                    so_stock_sl.ACT_ID = #{actId},
                    so_stock_sl.ACT_TIME = #{updTime}
            WHERE   so_stock_sl.LGCS_CODE = #{lgcsCode}
              AND   so_stock_sl.WAREHOUSE_CODE = #{warehouseCode}
              AND   so_stock_sl.STOCK_TYPE = #{stockType}
              AND   so_stock_sl.SL_CODE = #{slCode}
              AND   so_stock_sl.PD_CODE = #{pdCode}
              AND   so_stock_sl.SALE_PLATFORM = #{supplyPlatform}
    </update>

    <!--获得卖家所有的产品 -->
    <select id="findSellerStock" parameterType="BaseParam" resultType="com.msk.core.entity.SoStockSl">
        SELECT
          A.SL_CODE AS slCode,
          A.PD_CODE AS pdCode,
          (
            A.STOCK_QTY - IFNULL(
              (SELECT
                SUM(b.order_qty) - SUM(IFNULL(b.cancel_qty, 0))
              FROM
                so_order_detail b
              WHERE b.ORDER_ID IN
                (SELECT
                  c.ORDER_ID
                FROM
                  so_order c
                WHERE (c.SELLER_CODE = #{slCode}
                  OR (A.SL_CODE = '0000000' AND c.ORDER_TYPE in (5,6)))
                  AND c.ORDER_STATUS != '99'
                  AND c.ORDER_TYPE NOT IN (4,7))
                AND b.PD_CODE = A.PD_CODE),
              '0'
            )
          ) AS stockQty
        FROM
          SO_STOCK_SL AS A
        WHERE A.SL_CODE = #{slCode}
          AND A.LGCS_CODE = #{lgcsCode}
          AND A.SALE_PLATFORM = #{supplyPlatform}
          AND A.DEL_FLG = '0'
        ORDER BY A.SL_CODE
    </select>
    <select id="findSellerSupplierStock" parameterType="BaseParam" resultType="com.msk.so.bean.BaseStockBean">
        SELECT
          A.SL_CODE AS slCode,
          A.LGCS_CODE AS districtCode,
          A.SUPPLIER_CODE AS supplierCode,
          A.SUPPLIER_NAME AS supplierName,
          A.PD_CODE AS productCode,
          (
            A.STOCK_QTY - IFNULL(
              (SELECT
                SUM(b.order_qty) - SUM(IFNULL(b.cancel_qty, 0))
              FROM
                so_order_detail b
              WHERE b.ORDER_ID IN
                (SELECT
                  c.ORDER_ID
                FROM
                  so_order c
                WHERE (c.SELLER_CODE = #{slCode}
                  OR (A.SL_CODE = '0000000' AND c.ORDER_TYPE in (5,6)))
                  AND c.ORDER_STATUS != '99'
                  AND c.ORDER_TYPE NOT IN (4,7))
                AND b.PD_CODE = A.PD_CODE),
              '0'
            )
          ) AS stockQty
        FROM
          so_stock_sp AS A
        WHERE A.SL_CODE = #{slCode}
          AND A.LGCS_CODE = #{lgcsCode}
          AND A.SUPPLY_PLATFORM = #{supplyPlatform}
          <if test = "pdCode!=null and pdCode!= ''" >
          AND A.PD_CODE = #{pdCode}
          </if>
        AND A.DEL_FLG = '0'
        ORDER BY A.SL_CODE
    </select>

    <select id="getSalerStockNum" resultType="java.math.BigDecimal" parameterType="BaseParam">
        SELECT
          SUM(STOCK_QTY)
        FROM
          so_stock_sl
        WHERE SL_CODE = #{slCode}
          AND PD_CODE = #{pdCode}
    </select>

    <select id="getOrderList" parameterType="BaseParam" resultType="String">
        <![CDATA[
        SELECT DISTINCT
          so.ORDER_CODE
        FROM
          so_order so
        WHERE so.SELLER_CODE = #{slCode}
        AND so.ORDER_STATUS <> 99
        AND so.CRT_TIME < CONCAT(#{historyDate},' 23:59:59')
        AND so.CRT_TIME > CONCAT(#{historyDate},' 00:00:00')
        AND so.DEL_FLG = '0'
        ]]>
    </select>

    <select id="getChildOrderList" parameterType="BaseParam" resultType="String">
        <![CDATA[
        SELECT DISTINCT
          sor.CHILD_ORDER_CODE
        FROM
          so_order so
        LEFT JOIN so_order_relation sor ON sor.MAIN_ORDER_CODE = so.ORDER_CODE
        WHERE so.SELLER_CODE = #{slCode}
        AND so.ORDER_STATUS <> 99
        AND so.CRT_TIME < CONCAT(#{historyDate},' 23:59:59')
        AND so.CRT_TIME > CONCAT(#{historyDate},' 00:00:00')
        AND so.DEL_FLG = '0'
        AND sor.DEL_FLG = '0'
        ]]>
    </select>

    <select id="getTodayStockNum" parameterType="BaseParam" resultType="java.math.BigDecimal">
        SELECT SUM(IFNULL(ORDER_QTY,0)-IFNULL(CANCEL_QTY,0)-IFNULL(RETURN_QTY,0)) as num
        FROM so_order_detail
        WHERE PD_CODE =#{filterMap.pdCode}
        AND ORDER_CODE IN
        <foreach collection="filterMap.orderList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getSpStockNum" resultType="java.math.BigDecimal" parameterType="BaseParam">
        SELECT
        SUM(STOCK_QTY)
        FROM
        so_stock_sp
        WHERE SL_CODE = #{slCode}
        AND PD_CODE = #{pdCode}
        AND SUPPLIER_CODE = #{supplierCode}
    </select>

</mapper>
