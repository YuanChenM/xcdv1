<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.pd.logic.PD14112402Logic">

    <select id="findOne" parameterType="BaseParam" resultType="com.msk.core.entity.PdClassestree">
		SELECT
		LEVEL_NAME AS levelName
		FROM PD_CLASSESTREE A
		WHERE A.CLASSESTREE_CODE = #{filterMap.parentCode}
	</select>
    <insert id="save" parameterType="com.msk.core.entity.PdClassestree">
	INSERT INTO PD_CLASSESTREE (
	CLASSESTREE_ID,
	CLASSESTREE_CODE,
	LEVEL_CODE,
	LEVEL_NAME,
	PARENT_CODE,
	PARENT_NAME,
	TREE_LEVEL,
	DEL_FLG,
	CRT_ID,
	CRT_TIME,
	UPD_ID,
	UPD_TIME,
	ACT_ID,
	ACT_TIME,
	VER)
      VALUES
	(
		#{classestreeId},
		#{classestreeCode},
		#{levelCode},
		#{levelName},
		#{parentCode},
		#{parentName},
		#{treeLevel},
		'0',
		#{crtId},
		NOW(),
		#{updId},
		NOW(),
		NULL,
		NOW(),
		'1'
	);
	</insert>

    <select id="findClassesByParentCode" parameterType="BaseParam" resultType="int">
		SELECT COUNT(1)
		FROM PD_CLASSESTREE A
		WHERE A.PARENT_CODE = #{filterMap.parentCode}
		AND A.LEVEL_NAME = #{filterMap.levelName}
	</select>
    <!--二级分类修改操作-->
    <update id="modify" parameterType="com.msk.core.entity.PdClassestree">
		  UPDATE PD_CLASSESTREE AS A SET
			 A.LEVEL_NAME = #{levelName}
			 ,A.UPD_ID = #{updId}
			,A.UPD_TIME = NOW()
		  WHERE A.CLASSESTREE_CODE =#{classestreeCode}
	</update>


    <!-- 画面修改操作 start -->
    <!--产品品种是否存在-->
    <select id="findBreedExit" parameterType="BaseParam" resultType="int">
		SELECT
		COUNT(1)
		FROM PD_BREED
		WHERE MACHINING_CODE = #{filterMap.machiningCode}
		AND CLASSES_CODE = #{filterMap.classesCode}
		AND BREED_NAME = #{filterMap.breedName}
	</select>
    <!--获取breed最大id-->
    <select id="findBreedMaxId" parameterType="BaseParam" resultType="com.msk.core.entity.PdBreed">
		SELECT
		CASE
		WHEN MAX(BREED_CODE) IS NULL THEN 1
		ELSE MAX(BREED_CODE)+1 END AS breedCode
		FROM PD_BREED
		WHERE MACHINING_CODE = #{filterMap.machiningCode}
		AND CLASSES_CODE = #{filterMap.classesCode}
	</select>

    <!--产品标准是否存在-->
    <select id="findStandExist" parameterType="BaseParam" resultType="int">
		SELECT
		COUNT(1)
		FROM PD_STANDARD
		WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</select>

    <!--产品树形表中是否存在-->
    <select id="findClassesTreeExist" parameterType="BaseParam" resultType="int">
		SELECT
		COUNT(1)
		FROM PD_CLASSESTREE
		WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</select>


    <!--保存产品品种数据-->
    <insert id="saveBreed" parameterType="com.msk.core.entity.PdBreed">
		INSERT INTO PD_BREED (
			CLASSES_CODE,
			BREED_CODE,
			BREED_NAME,
			MACHINING_CODE,
			CLASSESTREE_CODE,
			DEL_FLG,
			CRT_ID,
			CRT_TIME,
			UPD_ID,
			UPD_TIME,
			ACT_ID,
			ACT_TIME,
			VER)
			VALUES(
					#{classesCode},
					#{breedCode},
					#{breedName},
					#{machiningCode},
					#{classestreeCode},
					'0',
					#{crtId},
					NOW(),
					#{updId},
					NOW(),
					NULL,
					NOW(),
					'1'
				);
	</insert>
    <!--保存商品标准数据-->
    <insert id="saveStand" parameterType="com.msk.core.entity.PdStandard">
		INSERT INTO PD_STANDARD (
			STANDARD_ID,
			CLASSES_CODE,
			MACHINING_CODE,
			BREED_CODE,
			CLASSESTREE_CODE,
			QLT_FLG,
			TNC_FLG,
			NOR_FLG,
			ORG_FLG,
			FED_FLG,
			MCQ_FLG,
			GNQ_FLG,
			TSP_FLG,
			DEL_FLG,
			CRT_ID,
			CRT_TIME,
			UPD_ID,
			UPD_TIME,
			ACT_ID,
			ACT_TIME,
			VER
		)
		VALUES
			(
				#{standardId},
				#{classesCode},
				#{machiningCode},
				#{breedCode},
				#{classestreeCode},
				'0',
				'0',
				'0',
				'0',
				'0',
				'0',
				'0',
				'0',
				'0' ,
				#{crtId},
				NOW(),
				#{updId},
				NOW(),
				NULL,
				NOW(),
				'1'
			);
	</insert>
	<!--二级分类修改操作-->
	<update id="modifyBreedName" parameterType="com.msk.core.entity.PdBreed">
		  UPDATE PD_BREED AS A SET
			 A.BREED_NAME = #{breedName}
			,A.UPD_ID = #{updId}
			,A.UPD_TIME = NOW()
		  WHERE A.CLASSESTREE_CODE =#{classestreeCode}
	</update>


	<!--获取所有当前breed的所有子节点-->
	<select id="findListParentNameIsBreedName" parameterType="BaseParam" resultType="com.msk.core.entity.PdClassestree">
		SELECT
		PARENT_NAME AS parentName,
		CLASSESTREE_CODE AS classestreeCode
		FROM PD_CLASSESTREE
		WHERE PARENT_CODE = #{filterMap.parentBreed}
	</select>


	<update id="modifyParentName"  parameterType="com.msk.core.entity.PdClassestree" >
		UPDATE PD_CLASSESTREE AS A SET
		A.PARENT_NAME = #{parentName}
		,A.UPD_ID = #{updId}
		,A.UPD_TIME = NOW()
		WHERE A.CLASSESTREE_CODE =#{classestreeCode}
	</update>


	<!--查询当前节点下是否存在子节点-->
	<select id="findList" parameterType="BaseParam" resultType="com.msk.core.entity.PdClassestree">
		SELECT CLASSESTREE_CODE
		FROM PD_CLASSESTREE
		WHERE PARENT_CODE = #{filterMap.classestreeCode}
	</select>

	<!-- 删除classes产品类别信息表中数据-->
	<delete id="removePdBreed" parameterType="BaseParam">
		DELETE FROM PD_BREED
		WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</delete>

	<!-- 删除产品标准表中数据-->
	<delete id="removePdStandard" parameterType="BaseParam">
		DELETE FROM PD_STANDARD
		WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</delete>


	<!-- 删除classes产品类别信息表中数据-->
	<delete id="remove" parameterType="BaseParam">
		DELETE FROM PD_CLASSESTREE
		WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</delete>

	<!-- 删除当前所有的标准档案卡标准数据-->
	<!--<delete id="removeAllCard" parameterType="BaseParam">
      DELETE FROM PD_CLASSESTREE_MAT WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode};
      DELETE FROM PD_ORG_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_FED_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_MCT_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_TNC_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_GNQ_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_SFT_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
      DELETE FROM PD_TSP_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode});
	</delete>-->
	<delete id="removepdClassestreeMat" parameterType="BaseParam">
		DELETE FROM PD_CLASSESTREE_MAT WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode}
	</delete>

	<delete id="removeOrgStd" parameterType="BaseParam">
		DELETE FROM PD_ORG_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeFedStd" parameterType="BaseParam">
		DELETE FROM PD_FED_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeMctStd" parameterType="BaseParam">
		DELETE FROM PD_MCT_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeTncStd" parameterType="BaseParam">
		DELETE FROM PD_TNC_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeGnqStd" parameterType="BaseParam">
		DELETE FROM PD_GNQ_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeSftStd" parameterType="BaseParam">
		DELETE FROM PD_SFT_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>

	<delete id="removeTspStd" parameterType="BaseParam">
		DELETE FROM PD_TSP_STD WHERE STANDARD_ID = (SELECT STANDARD_ID  FROM PD_STANDARD WHERE CLASSESTREE_CODE = #{filterMap.classestreeCode})
	</delete>



	<select id="findStandardId" parameterType="BaseParam" resultType="com.msk.core.entity.PdStandard">
		SELECT A.STANDARD_ID AS standardId
		FROM PD_STANDARD AS A WHERE A.CLASSESTREE_CODE=#{filterMap.classestreeCode}
	</select>
</mapper>
