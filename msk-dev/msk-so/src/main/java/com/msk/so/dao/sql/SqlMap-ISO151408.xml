<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.so.logic.ISO151408Logic">
	<select id="findSoOrder" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrder">
		SELECT
		A.ORDER_CODE AS orderCode,
		A.PRO_CODE AS proCode,
		A.REQUIRE_ORDER_CODE AS requireOrderCode,
		A.CONFIRM_ORDER_CODE AS confirmOrderCode,
		A.DELIVERY_ORDER_CODE AS deliveryOrderCode,
		A.BUYERS_ID AS buyersId,
		A.BUYERS_CODE AS buyersCode,
		A.BUYERS_NAME AS buyersName,
		A.BUYERS_TYPE AS buyersType,
		A.SELLER_CODE AS sellerCode,
		A.SELLER_NAME AS sellerName,
		A.ORDER_VICE_CODE AS orderViceCode,
		A.DISTRICT_CODE AS districtCode,
		A.ORDER_SOURCE AS orderSource,
		A.ORDER_TYPE AS orderType,
		A.ORDER_STATUS AS orderStatus,
		A.NEED_INVOICE AS needInvoice,
		A.ORDER_TIME AS orderTime,
		A.ORDER_AMOUNT AS orderAmount,
		A.PAYMENT_TYPE AS paymentType,
		A.SELLERS AS sellers,
		A.ORDER_TAKER AS orderTaker,
		A.SELF_DELIVERY_FLG AS selfDeliveryFlg,
		A.SPLIT_DELIVERY_FLG AS splitDeliveryFlg,
		A.CANCEL_REASON AS cancelReason,
		A.VER AS ver
		FROM
		so_order AS A
		WHERE
		A.ORDER_ID = #{orderId}
	</select>

	<insert id="saveSoReturn" parameterType="com.msk.core.entity.SoReturn">
		INSERT INTO so_return (
		RETURN_ID,
		RETURN_CODE,
		ORDER_ID,
		ORDER_CODE,
		BUYERS_CODE,
		BUYERS_NAME,
		SELLER_CODE,
		SELLER_NAME,
		DISTRICT_CODE,
		RETURN_SOURCE,
		RETURN_TYPE,
		RETURN_MODE,
		RETURN_AMOUNT,
		RETURN_REASON,
		APPLY_MAN,
		APPLY_TIME,
		APPLY_REMARK,
		RECEIVER_NAME,
		RECEIVER_TEL,
		IS_PAID,
		RETURN_STATUS,
		SELLERS,
		ORDER_TAKER,
		IMAGE1,
		IMAGE2,
		IMAGE3,
		IMAGE4,
		IMAGE5,
		ROLE_TYPE,
        BUYERS_ID,
		DEL_FLG,
		CRT_ID,
		CRT_TIME,
		VER
		)
		VALUES
		(
		#{returnId},
		#{returnCode},
		#{orderId},
		#{orderCode},
		#{buyersCode},
		#{buyersName},
		#{sellerCode},
		#{sellerName},
		#{districtCode},
		#{returnSource},
		#{returnType},
		#{returnMode},
		#{returnAmount},
		#{returnReason},
		#{applyMan},
		#{applyTime},
		#{applyRemark},
		#{receiverName},
		#{receiverTel},
		#{isPaid},
		#{returnStatus},
		#{sellers},
		#{orderTaker},
		#{image1},
		#{image2},
		#{image3},
		#{image4},
		#{image5},
		#{roleType},
        #{buyersId},
		0,
		#{crtId},
		#{crtTime},
		1
		)
	</insert>

	<insert id="saveSoReturnStatus" parameterType="com.msk.core.entity.SoReturnStatus">
		INSERT INTO SO_RETURN_STATUS (
		STATUS_ID,
		RETURN_ID,
		RETURN_CODE,
		RETURN_STATUS,
		DEL_FLG,
		CRT_ID,
		CRT_TIME,
		VER
		)
		VALUES
		(
		#{statusId},
		#{returnId},
		#{returnCode},
		#{returnStatus},
		0,
		#{crtId},
		#{crtTime},
		1
		)
	</insert>

	<select id="findSoReturnDetail" parameterType="BaseParam" resultType="com.msk.core.entity.SoReturnDetail">
		select sos.SHIP_ID as shipId,
				sos.SHIP_CODE as shipCode,
				soda.ORDER_DETAIL_AVAILABILITY_ID as orderDetailAvailabilityId,
				soda.SUPPLIER_CODE as supplierCode,
				soda.SUPPLIER_NAME as supplierName,
				<!--modify by wang_jainzhou for bug#3708 at 2016/11/18 start.-->
				sod.CLASSES_CODE AS classesCode,
				sod.CLASSES_NAME AS classesName,
				sod.BREED_CODE AS breedCode,
				sod.BREED_NAME AS breedName,
				sod.FEATURE_CODE AS featureCode,
				sod.FEATURE_NAME AS featureName,
				sod.NORMS_CODE AS normsCode,
				sod.NORMS_NAME AS normsName,
				sod.PD_CODE AS pdCode,
				sod.PD_NAME AS pdName,
				<!--modify by wang_jainzhou for bug#3708 at 2016/11/18 end.-->
				soda.PD_LEVEL as pdLevel,
				soda.PD_GRADE_CODE as pdGradeCode,
				soda.PD_GRADE_NAME as pdGradeName,
				soda.SKU_CODE as skuCode,
				soda.UNIT as unit,
				soda.PACKING_VOLUME as packingVolume,
				soda.WEIGHT as weight,
				soda.VOLUME as volume,
				IFNULL(soda.RECEIVE_QTY ,0) as returnQty
				FROM SO_ORDER_DETAIL_AVAILABILITY soda
				<!--Add by wang_jainzhou for bug#3708 at 2016/11/18 Start.-->
		        INNER JOIN so_order_detail sod
    			ON soda.ORDER_DETAIL_ID = sod.ORDER_DETAIL_ID
				<!--Add by wang_jainzhou for bug#3708 at 2016/11/18 end.-->
				INNER JOIN SO_ORDER_SHIP sos
				ON sos.SHIP_ID = soda.SHIP_ID
				WHERE soda.ORDER_ID = #{orderId}
				OR soda.ORDER_ID = (select CHILD_ORDER_ID
									from SO_ORDER_RELATION
									where MAIN_ORDER_ID = #{orderId})
	</select>

	<update id="modifySoOrderDetailReturnQty" parameterType="BaseParam">
		UPDATE so_order_detail
		SET RETURN_QTY = RECEIVE_QTY,
			UPD_ID = #{crtId},
			UPD_TIME = #{crtTime},
			VER = VER + 1
		WHERE
		ORDER_ID = #{orderId}
		OR ORDER_ID =  (select CHILD_ORDER_ID
						from SO_ORDER_RELATION
						where MAIN_ORDER_ID = #{orderId})
		AND DETAIL_STATUS != 99
	</update>

	<update id="modifySoOrderDetailAvailabilityReturnQty" parameterType="BaseParam">
		UPDATE so_order_detail_availability
		SET RETURN_QTY = RECEIVE_QTY,
			UPD_ID = #{crtId},
			UPD_TIME = #{crtTime},
			VER = VER + 1
		WHERE
		ORDER_ID = #{orderId}
		OR ORDER_ID = (select CHILD_ORDER_ID
						from SO_ORDER_RELATION
						where MAIN_ORDER_ID = #{orderId})
		AND STATUS != 99
	</update>

	<update id="modifySoOrderDetailReturnQtyPartial" parameterType="BaseParam">
		UPDATE so_order_detail
		SET RETURN_QTY = IFNULL(RETURN_QTY,0) + #{returnQty},
		UPD_ID = #{crtId},
		UPD_TIME = #{crtTime},
		VER = VER + 1
		WHERE
		ORDER_DETAIL_ID = (
		SELECT ORDER_DETAIL_ID
		FROM so_order_detail_availability
		WHERE ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
		)
	</update>

	<update id="modifySoOrderDetailAvailabilityReturnQtyPartial" parameterType="BaseParam">
		UPDATE so_order_detail_availability
		SET RETURN_QTY = IFNULL(RETURN_QTY,0) + #{returnQty},
		UPD_ID = #{crtId},
		UPD_TIME = #{crtTime},
		VER = VER + 1
		WHERE ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
	</update>

	<select id="findAvailability" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrderDetailAvailability">
		SELECT
		IFNULL(A.RECEIVE_QTY, 0)-IFNULL(A.RETURN_QTY, 0) AS receiveQty
		FROM
		SO_ORDER_DETAIL_AVAILABILITY AS A
		WHERE
		A.ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
	</select>

	<select id="findSoReturnDetailOne" parameterType="BaseParam" resultType="com.msk.core.entity.SoReturnDetail">
		select
				sos.SHIP_ID as shipId,
				sos.SHIP_CODE as shipCode,
				soda.ORDER_DETAIL_AVAILABILITY_ID as orderDetailAvailabilityId,
				soda.SUPPLIER_CODE as supplierCode,
				soda.SUPPLIER_NAME as supplierName,
				sod.CLASSES_CODE as classesCode,
				sod.CLASSES_NAME as classesName,
				sod.BREED_CODE as breedCode,
				sod.BREED_NAME as breedName,
				sod.FEATURE_CODE as featureCode,
				sod.FEATURE_NAME as featureName,
				sod.NORMS_CODE as normsCode,
				sod.NORMS_NAME as normsName,
				sod.PD_CODE as pdCode,
				sod.PD_NAME as pdName,
				sod.PD_LEVEL as pdLevel,
				sod.PD_GRADE_CODE as pdGradeCode,
				sod.PD_GRADE_NAME as pdGradeName,
				soda.SKU_CODE as skuCode,
				sod.UNIT as unit,
				sod.PACKING_VOLUME as packingVolume,
				sod.WEIGHT as weight,
				sod.VOLUME as volume
				FROM SO_ORDER_DETAIL_AVAILABILITY soda
				INNER JOIN SO_ORDER_SHIP sos
				ON sos.SHIP_ID = soda.SHIP_ID
				INNER JOIN SO_ORDER_DETAIL sod
				ON sod.ORDER_DETAIL_ID = soda.ORDER_DETAIL_ID
				WHERE soda.ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
				AND soda.SHIP_ID = #{filterMap.shipId}
	</select>

	<insert id="saveSoReturnDetail" parameterType="com.msk.core.entity.SoReturnDetail">
		INSERT INTO
		so_return_detail (
			DETAIL_ID,
			RETURN_ID,
			SHIP_ID,
			SHIP_CODE,
			ORDER_DETAIL_AVAILABILITY_ID,
			SUPPLIER_CODE,
			SUPPLIER_NAME,
			CLASSES_CODE,
			CLASSES_NAME,
			BREED_CODE,
			BREED_NAME,
			FEATURE_CODE,
			FEATURE_NAME,
			NORMS_CODE,
			NORMS_NAME,
			PD_CODE,
			PD_NAME,
			PD_LEVEL,
			PD_GRADE_CODE,
			PD_GRADE_NAME,
			SKU_CODE,
			UNIT,
			PACKING_VOLUME,
			WEIGHT,
			VOLUME,
			INBOUND_BATCH,
			RETURN_QTY,
			DETAIL_REASON,
			DETAIL_STATUS,
			DEL_FLG,
			CRT_ID,
			CRT_TIME,
			VER
		)
		VALUES
		(
		#{detailId},
		#{returnId},
		#{shipId},
		#{shipCode},
		#{orderDetailAvailabilityId},
		#{supplierCode},
		#{supplierName},
		#{classesCode},
		#{classesName},
		#{breedCode},
		#{breedName},
		#{featureCode},
		#{featureName},
		#{normsCode},
		#{normsName},
		#{pdCode},
		#{pdName},
		#{pdLevel},
		#{pdGradeCode},
		#{pdGradeName},
		#{skuCode},
		#{unit},
		#{packingVolume},
		#{weight},
		#{volume},
		#{inboundBatch},
		#{returnQty},
		#{detailReason},
		#{detailStatus},
		0,
		#{crtId},
		#{crtTime},
		1
		)
	</insert>

	<select id="findPrice" parameterType="BaseParam" resultType="BigDecimal">
		SELECT
		IFNULL(sod.PD_PRICE, 0)
		FROM
		SO_ORDER_DETAIL_AVAILABILITY soda
		INNER JOIN SO_ORDER_DETAIL sod
		ON soda.ORDER_DETAIL_ID = sod.ORDER_DETAIL_ID
		WHERE
		soda.ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
	</select>

	<select id="findReturnAmount" parameterType="BaseParam" resultType="com.msk.so.bean.ISO151408Bean">
		SELECT
		IFNULL(sod.PD_PRICE, 0) * IFNULL(soda.RECEIVE_QTY, 0) as

		returnAmount
		FROM
		SO_ORDER_DETAIL_AVAILABILITY soda
		INNER JOIN SO_ORDER_DETAIL sod
		ON soda.ORDER_DETAIL_ID = sod.ORDER_DETAIL_ID
		WHERE
		soda.ORDER_ID = #{orderId}
		OR soda.ORDER_ID = ( select CHILD_ORDER_ID
							from SO_ORDER_RELATION
							where MAIN_ORDER_ID = #{orderId})
		AND soda.STATUS != 99
	</select>

	<select id="findSoReturn" parameterType="BaseParam" resultType="Integer">
		SELECT
		count(1)
		FROM
		SO_RETURN
		WHERE
		ORDER_ID = #{orderId}
		AND RETURN_TYPE = 3
	</select>

	<update id ="updateSoOrder" parameterType="BaseParam">
		UPDATE so_order so
		LEFT JOIN (
		SELECT #{orderId} AS order_id, SUM(sod.order_qty - ifnull(sod.cancel_qty, 0) - ifnull(sod.return_qty, 0)- ifnull(sod.REJECTION_QTY, 0)) AS leftQty
		FROM so_order_detail sod
		LEFT JOIN so_order_relation sor
		ON sod.order_id = sor.child_order_id
		WHERE (sod.order_id = #{orderId} OR sor.main_order_id = #{orderId})
		) t
		ON so.order_id = t.order_id
		SET so.RETURN_FLG = CASE WHEN t.leftQty = 0 THEN 1 ELSE 2 END,
		so.UPD_ID = #{crtId},
		so.UPD_TIME = #{updTime},
		so.VER = so.VER +1
		WHERE so.order_id = #{orderId}
	</update>



	<update id ="updateChildSoOrder" parameterType="BaseParam">
		UPDATE so_order so
		LEFT JOIN (
		SELECT #{orderId} AS order_id, SUM(sod.order_qty - ifnull(sod.cancel_qty, 0) - ifnull(sod.return_qty, 0)- ifnull(sod.REJECTION_QTY, 0)) AS leftQty
		FROM so_order_detail sod
		WHERE sod.order_id = #{orderId}
		)t
		ON so.order_id = t.order_id
		SET so.RETURN_FLG = CASE WHEN t.leftQty = 0 THEN 1 ELSE 2 END,
		so.UPD_ID = #{crtId},
		so.UPD_TIME = #{updTime},
		so.VER = so.VER +1
		WHERE so.order_id = #{orderId}
	</update>


	<select id="findOrderRelation" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrderRelation">
		SELECT MAIN_ORDER_ID AS mainOrderId,
		CHILD_ORDER_ID AS childOrderId
		FROM SO_ORDER_RELATION
		WHERE MAIN_ORDER_ID = #{orderId}
	</select>

	<!-- Add by wang_jainzhou for bug#3736 at 2016/11/18 start.-->
	<select id="findProductInfo" parameterType="BaseParam" resultType="com.msk.core.entity.PdNormsStd">
		SELECT
		a.NORMS_OUT AS normsOut
		, a.NORMS_VOLUME AS normsVolume
		, a.NETWEIGHT_OUT AS netweightOut
		FROM
		pd_norms_std a
		LEFT JOIN PD_STANDARD b
		ON a.STANDARD_ID = b.STANDARD_ID
		WHERE
		b.CLASSESTREE_CODE = SUBSTRING(#{filterMap.pdCode},1,9)
	</select>
	<!-- Add by wang_jainzhou for bug#3736 at 2016/11/18 end.-->
</mapper>