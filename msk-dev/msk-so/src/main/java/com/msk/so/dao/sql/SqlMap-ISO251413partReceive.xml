<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.so.logic.ISO251413partReceiptLogic">

  <sql id="selectOrderSql">
    ORDER_ID AS orderId,
    ORDER_CODE AS orderCode,
    ORDER_VICE_CODE AS auxiliaryCode,
    PRO_CODE AS proCode,
    REQUIRE_ORDER_CODE AS requireOrderCode,
    CONFIRM_ORDER_CODE AS confirmOrderCode,
    DELIVERY_ORDER_CODE AS deliveryOrderCode,
    BUYERS_ID AS buyersId,
    BUYERS_CODE AS buyersCode,
    SELLER_CODE AS sellerCode,
    SELLER_NAME AS sellerName,
    DISTRICT_CODE AS districtCode,
    ORDER_SOURCE AS orderSource,
    ORDER_TYPE AS orderType,
    ORDER_STATUS AS orderStatus,
    NEED_INVOICE AS needInvoice,
    ORDER_TIME AS orderTime,
    ORDER_AMOUNT AS orderAmount,
    PAYMENT_TYPE AS paymentType,
    SELLERS AS sellers,
    ORDER_TAKER AS orderTaker,
    SELF_DELIVERY_FLG AS selfDeliveryFlg,
    SPLIT_DELIVERY_FLG AS splitDeliveryFlg,
    CANCEL_REASON AS cancelReason,
    RETURN_FLG AS returnFlg
  </sql>

  <sql id="selectOrderDetailSql">
    sod.ORDER_ID AS orderId,
    sod.ORDER_CODE AS orderCode,
    sod.ORDER_DETAIL_ID AS orderDetailId,
    sod.ORDER_DETAIL_TYPE AS orderDetailType,
    sod.ORDER_DETAIL_LEVEL AS orderDetailLevel,
    sod.CLASSES_CODE AS classesCode,
    sod.CLASSES_NAME AS classesName,
    sod.BREED_CODE AS breedCode,
    sod.BREED_NAME AS breedName,
    sod.FEATURE_CODE AS featureCode,
    sod.FEATURE_NAME AS featureName,
    sod.NORMS_CODE AS normsCode,
    sod.NORMS_NAME AS normsName,
    sod.PD_CODE AS pdCode,
    sod.PD_NAME AS pdName,
    sod.UNIT AS unit,
    sod.PACKING_VOLUME AS packingVolume,
    sod.WEIGHT AS weight,
    sod.VOLUME AS volume,
    sod.AGREE_JOINT AS agreeJoint,
    sod.IS_JOINT AS isJoint,
    sod.BUYERS_CONFIRM_SHIPMENTS AS buyersConfirmShipments,
    sod.PD_PRICE AS pdPrice,
    sod.PRICE_CYCLE AS priceCycle,
    sod.ORDER_QTY AS orderQty,
    IFNULL(sod.SEND_QTY,0) AS sendQty,
    sod.RECEIVE_QTY AS receiveQty,
    sod.CANCEL_QTY AS cancelQty,
    sod.RETURN_QTY AS returnQty,
    sod.SEND_TIME AS sendTime,
    sod.RECEIVED_TIME AS receivedTime,
    sod.DETAIL_STATUS AS detailStatus,
    sod.CANCEL_REASON AS cancelReason
  </sql>

  <select id="findOne" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrder">
    SELECT
    ORDER_ID AS orderId
    ,VER AS ver
    ,ORDER_STATUS AS orderStatus
    ,UPD_TIME AS updTime
    ,ORDER_AMOUNT AS orderAmount
    ,PAYMENT_TYPE AS paymentType
    ,ORDER_SOURCE AS orderSource
    ,ORDER_CODE AS orderCode
    ,BUYERS_CODE AS buyersCode
    ,BUYERS_TYPE AS buyersType
    ,SELLER_CODE AS sellerCode
    ,ORDER_TYPE AS orderType
    FROM SO_ORDER
    WHERE ORDER_ID=#{orderId}
    <if test="@com.msk.core.utils.MybatisTag@notEmpty(paymentType)">
      AND PAYMENT_TYPE = #{paymentType}
    </if>
    AND DEL_FLG=0
  </select>

  <select id="getPageCount" resultType="java.lang.Integer" parameterType="BaseParam">
    SELECT COUNT(1)
    FROM
    (
    SELECT
    SUM(IFNULL(sod.RECEIVE_QTY,0)) AS receiveQty,
    SUM(IFNULL(sod.REJECTION_QTY,0)) AS rejectionQty
    FROM
    SO_ORDER so
    LEFT JOIN so_order_relation sor
    ON so.order_id = sor.MAIN_ORDER_ID
    LEFT JOIN SO_ORDER_DETAIL sod
    ON (so.ORDER_ID = sod.ORDER_ID or sod.ORDER_ID = sor.CHILD_ORDER_ID)
    AND sod.DEL_FLG = 0
    WHERE so.ORDER_ID = #{orderId}
    AND so.DEL_FLG = 0
    )a
    WHERE a.receiveQty = 0
    AND a.rejectionQty = 0
    <!--Delete for Bug#2606 at 2016/09/12 by sun_jiaju Start-->
    <!--AND ORDER_STATUS IN-->
    <!--<foreach collection="filterMap.statusArray" item="item" index="index" open="(" separator="," close=")">-->
    <!--#{item}-->
    <!--</foreach>-->
    <!--Delete for Bug#2606 at 2016/09/12 by sun_jiaju End-->
  </select>



  <update id="modifyMainAndChildAllShip" parameterType="BaseParam">
    UPDATE SO_ORDER
    SET ORDER_STATUS=#{filterMap.status}
    ,UPD_ID=#{filterMap.updId}
    ,ORDER_SEND_TIME=#{filterMap.sendTime}
    ,VER = VER + 1
    WHERE ORDER_ID=#{filterMap.orderId} AND DEL_FLG = 0
  </update>



  <!--查询供货明细信息-->
  <select id="getSupplyInfoForReceipt" parameterType="com.msk.so.bean.order.OrderShipProductInfo" resultType="com.msk.so.bean.order.OrderDetailAndSuppInfo">
    SELECT
    IFNULL(soda.SUPP_QTY,0) AS suppOrderQty,
    IFNULL(soda.SEND_QTY,0) AS suppSendQty,
    IFNULL(soda.RECEIVE_QTY,0) AS suppReceiveQty,
    IFNULL(soda.CANCEL_QTY,0) AS suppCancelQty,
    IFNULL(soda.RETURN_QTY,0) AS suppReturnQty,
    IFNULL(soda.REJECTION_QTY,0) AS suppRejectionQty,
    soda.STATUS AS suppStatus,
    sod.DETAIL_STATUS AS detailStatus,
    sod.ORDER_DETAIL_ID AS orderDetailId,
    IFNULL(sod.ORDER_QTY,0) AS orderQty,
    IFNULL(sod.RECEIVE_QTY,0) AS detailReceiveQty,
    IFNULL(sod.CANCEL_QTY,0) AS detailCancelQty,
    IFNULL(sod.REJECTION_QTY,0) AS detailRejectionQty,
    IFNULL(sod.SEND_QTY,0) AS detailSendQty,
    so.ORDER_STATUS AS orderStatus,
    SHIP_ID AS shipId,
    soda.ORDER_DETAIL_AVAILABILITY_ID AS detailAvailabilityId,
    soda.SUPPLIER_CODE AS supplierCode
    FROM
    so_order_detail_availability soda
    LEFT JOIN so_order_detail sod
    ON soda.ORDER_DETAIL_ID = sod.ORDER_DETAIL_ID
    LEFT JOIN so_order so
    ON  soda.ORDER_ID = so.ORDER_ID
    WHERE soda.ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
    AND soda.SHIP_ID = #{shipId}
  </select>

  <!--更新明细表中的状态和收货数量-->
  <update id="modifyAvaDetailReceiptStatusAndQty" parameterType="com.msk.so.bean.order.OrderShipProductInfo" >
    UPDATE
    so_order_detail_availability
    SET
    RECEIVE_QTY = IFNULL(RECEIVE_QTY,0) + #{receiveQty},
    RECEIVED_TIME = #{crtTime},
    UPD_ID = #{updId},
    UPD_TIME = #{updTime},
    VER = VER + 1
    WHERE ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
  </update>

  <!--更新实际到货时间-->
  <update id="modifyDeliverActualTime" parameterType="com.msk.core.entity.SoDeliver" >
    UPDATE
    so_deliver
    SET
    ACTUAL_RECEIVE_DATE = #{actualReceiveDate},
    UPD_ID = #{updId},
    UPD_TIME = #{updTime},
    VER = VER + 1
    WHERE DELIVER_CODE = #{deliverCode}
          AND SHIP_ID = #{shipId}
  </update>

  <!--更新发货明细信息-->
  <update id="modifyDeliverDetailInfo" parameterType="com.msk.core.entity.SoDeliverDetail" >
    UPDATE
    so_deliver_detail
    SET
    RECEIVE_QTY = IFNULL(RECEIVE_QTY,0) + #{receiveQty},
    UPD_ID = #{updId},
    UPD_TIME = #{updTime},
    VER = VER + 1
    WHERE ORDER_DETAIL_AVAILABILITY_ID = #{orderDetailAvailabilityId}
  </update>

  <!--更新实际到货时间-->
  <update id="modifyDetailReceiptStatusAndQty" parameterType="com.msk.so.bean.order.OrderDetailAndSuppInfo" >
    UPDATE
    SO_ORDER_DETAIL
    SET
    RECEIVE_QTY = IFNULL(RECEIVE_QTY,0) + #{receiveQty},
    UPD_ID = #{updId},
    UPD_TIME = #{updTime},
    VER = VER + 1
    WHERE
    ORDER_DETAIL_ID = #{orderDetailId}
  </update>

  <!-- 查询相关配送单信息-->
  <select id="getReceiptDeliverCount" resultType="Integer" parameterType="com.msk.core.entity.SoDeliver" >
    SELECT COUNT(*)
    FROM
    so_deliver
    WHERE DELIVER_CODE = #{deliverCode}
    AND SHIP_ID = #{shipId}
  </select>


  <select id="findSoOrder" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrder">
    SELECT so.ORDER_ID as orderId,
    so.ORDER_CODE as orderCode,
    so.ORDER_TYPE as orderType,
    so.BUYERS_ID AS buyersId,
    so.BUYERS_CODE AS buyersCode,
    IF(so.BUYERS_NAME='', '无', IFNULL(so.BUYERS_NAME, '无')) AS buyersName,
    child.sellerCode,
    child.sellerName
    FROM so_order so
    LEFT JOIN (
    SELECT IF(soChild.SELLER_CODE='', '无', IFNULL(soChild.SELLER_CODE, '无')) AS sellerCode,
    IF(soChild.SELLER_NAME='', '无', IFNULL(soChild.SELLER_NAME, '无')) AS sellerName
    FROM so_order soChild
    WHERE soChild.ORDER_ID = (
    SELECT CHILD_ORDER_ID
    FROM so_order_relation
    WHERE MAIN_ORDER_ID =(
    SELECT order_id
    FROM so_order_ship
    WHERE SHIP_ID = #{shipId}
    )
    ))child  ON 1=1
    WHERE so.ORDER_ID = (
    SELECT order_id
    FROM so_order_ship
    WHERE SHIP_ID = #{shipId}
    )
  </select>

  <select id="findAvaDetail" parameterType="BaseParam" resultType="com.msk.so.bean.ISO151415Bean">
    SELECT soda.order_id as orderId,
    IF(soda.SUPPLIER_CODE='', '无', IFNULL(soda.SUPPLIER_CODE, '无')) AS businessMainId,
    IF(soda.SUPPLIER_NAME='', '无', IFNULL(soda.SUPPLIER_NAME, '无')) AS businessMainName,
    #{receiveQty} * sod.PD_PRICE AS paidAmount,
    t1.deliverQty * sod.PD_PRICE AS shippingAmount
    FROM so_order_detail_availability soda
    INNER JOIN so_order_detail sod
    ON sod.ORDER_DETAIL_ID = soda.ORDER_DETAIL_ID
    INNER JOIN (
    SELECT SUM(DELIVER_QTY) AS deliverQty
    FROM so_deliver_detail
    WHERE DELIVER_CODE = #{deliverCode}
    AND ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
    GROUP BY DELIVER_CODE, ORDER_DETAIL_AVAILABILITY_ID
    ) t1 ON 1=1
    WHERE ORDER_DETAIL_AVAILABILITY_ID = #{shipDetailId}
  </select>


  <select id="getOrderShipInfoReceipt" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrderShip" >
    SELECT
    SHIP_ID AS shipId,
    SHIP_CODE AS shipCode,
    ORDER_ID AS orderId,
    ORDER_CODE AS orderCode
    FROM
    so_order_ship
    WHERE SHIP_ID = #{shipId}
    AND SHIP_STATUS IN (2,3)
  </select>


  <insert id="save" parameterType="com.msk.core.entity.SoPayment">
    INSERT INTO so_payment (
    PAYMENT_ID
    ,ORDER_ID
    ,ORDER_CODE
    ,PAY_MODE
    ,PAY_AMOUNT
    ,PAY_ORDER_CODE
    ,PAY_TIME
    ,DEL_FLG
    ,CRT_ID
    ,CRT_TIME
    ,VER
    )
    VALUE
    (
    #{paymentId}
    ,#{orderId}
    ,#{orderCode}
    ,#{payMode}
    ,#{payAmount}
    ,#{payOrderCode}
    ,#{payTime}
    ,0
    ,#{crtId}
    ,#{crtTime}
    ,1
    )
  </insert>


  <update id="cancelOtherOrderDetail" parameterType="BaseParam" >
    UPDATE so_order_detail sod
    LEFT JOIN so_order_relation sor
    ON sod.order_id = sor.child_order_id
    LEFT JOIN so_order_detail_availability soda
    ON sod.ORDER_DETAIL_ID = soda.ORDER_DETAIL_ID
    SET sod.CANCEL_QTY = sod.ORDER_QTY,
    sod.UPD_ID = #{updId},
    sod.UPD_TIME = #{updTime},
    sod.DETAIL_STATUS = 99,
    sod.VER = sod.VER + 1
    WHERE ifnull(sor.main_order_id, sod.order_id) = #{orderId}
    AND soda.ship_id IS NULL
  </update>


  <select id="findOrderRelation" parameterType="BaseParam" resultType="com.msk.core.entity.SoOrderRelation">
    SELECT MAIN_ORDER_ID AS mainOrderId,
    CHILD_ORDER_ID AS childOrderId
    FROM SO_ORDER_RELATION
    WHERE MAIN_ORDER_ID = #{orderId}
  </select>

  <select id="getChildLeftCount" parameterType="BaseParam" resultType="Integer">
    SELECT SUM(ifnull(soda.SUPP_QTY, 0) - ifnull(soda.CANCEL_QTY, 0) - ifnull(soda.RECEIVE_QTY, 0) - ifnull(soda.REJECTION_QTY, 0))
    FROM so_order so
    LEFT JOIN so_order_detail_availability soda
    ON soda.order_id = so.order_id
    WHERE so.order_id = #{filterMap.childOrderId}
    AND (soda.ship_id != #{shipId} OR soda.ship_id IS NULL)
  </select>

  <select id="getChildReceiveCount" parameterType="BaseParam" resultType="Integer">
    SELECT SUM(ifnull(soda.RECEIVE_QTY, 0))
    FROM so_order so
    LEFT JOIN so_order_detail_availability soda
    ON soda.order_id = so.order_id
    WHERE so.order_id = #{filterMap.childOrderId}
    AND soda.ship_id = #{shipId}
  </select>

  <update id="modifyChildOrder" parameterType="BaseParam" >
    UPDATE so_order so
    LEFT JOIN (
    SELECT so.order_id,
    ifnull(SUM(ifnull(soda1.RECEIVE_QTY, 0) * sod1.pd_price), 0) + ifnull(t1.orderAmount, 0) AS orderAmount,
    so.order_amount
    FROM so_order so
    LEFT JOIN so_order_detail_availability soda1
    ON soda1.order_id = so.order_id
    AND soda1.ship_id = #{shipId}
    LEFT JOIN so_order_detail sod1
    ON sod1.ORDER_DETAIL_ID = soda1.ORDER_DETAIL_ID
    LEFT JOIN (
    SELECT so.order_id,
    ifnull(SUM(ifnull(soda2.SUPP_QTY, 0) * sod2.pd_price), 0) AS orderAmount
    FROM so_order so
    LEFT JOIN so_order_detail_availability soda2
    ON soda2.order_id = so.order_id
    AND soda2.ship_id IS NULL
    LEFT JOIN so_order_detail sod2
    ON sod2.ORDER_DETAIL_ID = soda2.ORDER_DETAIL_ID
    WHERE so.order_id = #{filterMap.childOrderId}
    ) t1
    ON t1.order_id = so.order_id
    WHERE so.order_id = #{filterMap.childOrderId}
    ) t2
    ON t2.order_id = so.order_id
    SET
    <if test="filterMap.orderStatus!=null and filterMap.orderStatus!=''">
      so.order_status = #{filterMap.orderStatus},
    </if>
    so.order_amount = CASE WHEN so.order_amount_old IS NULL THEN t2.orderAmount ELSE so.order_amount END,
    so.order_amount_old = CASE WHEN so.order_amount_old IS NULL THEN t2.order_amount ELSE so.order_amount_old END,
    so.UPD_ID = #{updId},
    so.UPD_TIME = #{updTime},
    so.VER = so.VER + 1
    WHERE so.order_id = #{filterMap.childOrderId}
  </update>

  <select id="getLeftCount" parameterType="BaseParam" resultType="Integer">
    SELECT SUM(ifnull(soda.SUPP_QTY, 0) - ifnull(soda.CANCEL_QTY, 0) - ifnull(soda.RECEIVE_QTY, 0) - ifnull(soda.REJECTION_QTY, 0))
    FROM so_order so
    LEFT JOIN so_order_relation sor
    ON so.order_id = sor.main_order_id
    LEFT JOIN so_order_detail_availability soda
    ON (soda.order_id = so.order_id OR soda.order_id = sor.child_order_id)
    WHERE so.order_id = #{orderId}
    AND (soda.ship_id != #{shipId} OR soda.ship_id IS NULL)
  </select>

  <update id="modifyOrder" parameterType="BaseParam" >
    UPDATE so_order so
    LEFT JOIN (
    SELECT so.order_id,
    ifnull(SUM(ifnull(soda1.RECEIVE_QTY, 0) * sod1.pd_price), 0) + ifnull(t1.orderAmount, 0) AS orderAmount,
    so.order_amount
    FROM so_order so
    LEFT JOIN so_order_relation sor
    ON so.order_id = sor.main_order_id
    LEFT JOIN so_order_detail_availability soda1
    ON (soda1.order_id = so.order_id OR soda1.order_id = sor.child_order_id)
    AND soda1.ship_id = #{shipId}
    LEFT JOIN so_order_detail sod1
    ON sod1.ORDER_DETAIL_ID = soda1.ORDER_DETAIL_ID
    LEFT JOIN (
    SELECT so.order_id,
    ifnull(SUM(ifnull(soda2.SUPP_QTY, 0) * sod2.pd_price), 0) AS orderAmount
    from so_order so
    LEFT JOIN so_order_relation sor
    ON so.order_id = sor.main_order_id
    LEFT JOIN so_order_detail_availability soda2
    ON (soda2.order_id = so.order_id OR soda2.order_id = sor.child_order_id)
    AND soda2.ship_id IS NULL
    LEFT JOIN so_order_detail sod2
    ON sod2.ORDER_DETAIL_ID = soda2.ORDER_DETAIL_ID
    WHERE so.order_id = #{orderId}
    ) t1
    on t1.order_id = so.order_id
    WHERE so.order_id = #{orderId}
    ) t2
    ON t2.order_id = so.order_id
    SET
    <if test="filterMap.orderStatus!=null and filterMap.orderStatus!=''">
      so.order_status = #{filterMap.orderStatus},
    </if>
    so.order_amount = CASE WHEN so.order_amount_old IS NULL THEN t2.orderAmount ELSE so.order_amount END,
    so.order_amount_old = CASE WHEN so.order_amount_old IS NULL THEN t2.order_amount ELSE so.order_amount_old END,
    so.UPD_ID = #{updId},
    so.UPD_TIME = #{updTime},
    so.VER = so.VER + 1
    WHERE so.order_id = #{orderId}
  </update>

</mapper>
