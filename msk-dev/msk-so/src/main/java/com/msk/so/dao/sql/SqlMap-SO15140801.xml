<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.msk.so.logic.SO15140801Logic">
    <sql id="selectSqlSl">
        STOCK_ID AS stockId,
        IFNULL(LGCS_CODE,'') AS lgcsCode,
        IFNULL(LGCSNAME,'') AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        STOCK_TYPE AS stockType,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        IFNULL(pc.CLASSES_CODE,'') AS classesCode,
        IFNULL(pc.CLASSES_NAME,'') AS classesName,
        IFNULL(pb.BREED_CODE,'') AS breedCode,
        IFNULL(pb.BREED_NAME,'') AS breedName,
        IFNULL(pf.FEATURE_CODE,'') AS featureCode,
        IFNULL(pf.FEATURE_NAME,'') AS featureName,
        IFNULL(STOCK.NORMS_CODE,'') AS normsCode,
        IFNULL(STOCK.NORMS_NAME,'') AS normsName,
        IFNULL(PD_CODE,'') AS pdCode,
        IFNULL(
            CONCAT(
                IFNULL(pc.CLASSES_NAME, ''),
                "/",
                IFNULL(pm.MACHINING_NAME, ''),
                "/",
                IFNULL(pb.BREED_NAME, ''),
                "/",
                IFNULL(pf.FEATURE_NAME, ''),
                "/",
                IFNULL(pw.WEIGHT_NAME, ''),
                "/",
                IFNULL(pg.GRADE_NAME, '')
            ),
            '未知产品'
        ) AS pdName,
        PD_LEVEL AS pdLevel,
        PACKING_VOLUME AS packingVolume,
        STOCK_QTY AS stockQty
    </sql>
    <sql id="selectSqlSp">
        STOCK_ID AS stockId,
        IFNULL(LGCS_CODE,'') AS lgcsCode,
        IFNULL(LGCSNAME,'') AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        SUPPLY_PLATFORM AS supplyPlatform,
        STOCK_TYPE AS stockType,
        SOURCE_SL_CODE AS sourceSlCode,
        SOURCE_SL_NAME AS sourceSlName,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        IFNULL(SUPPLIER_CODE,'') AS supplierCode,
        IFNULL(SUPPLIER_NAME,'') AS supplierName,
        IFNULL(CLASSES_CODE,'') AS classesCode,
        IFNULL(CLASSES_NAME,'') AS classesName,
        IFNULL(BREED_CODE,'') AS breedCode,
        IFNULL(BREED_NAME,'') AS breedName,
        IFNULL(FEATURE_CODE,'') AS featureCode,
        IFNULL(FEATURE_NAME,'') AS featureName,
        IFNULL(NORMS_CODE,'') AS normsCode,
        IFNULL(NORMS_NAME,'') AS normsName,
        IFNULL(PD_CODE,'') AS pdCode,
        IFNULL(PD_NAME,'') AS pdName,
        PD_LEVEL AS pdLevel,
        IFNULL(UNIT,'') AS unit,
        PACKING_VOLUME AS packingVolume,
        WEIGHT AS weight,
        VOLUME AS volume,
        STOCK_QTY AS stockQty
    </sql>
    <!--条件 -->
    <sql id="whereCondition">
            <if test="filterMap.classesName!=null and filterMap.classesName!=''">
                AND pc.CLASSES_NAME like #{filterMap.classesName}
            </if>
            <if test="filterMap.breedName!=null and filterMap.breedName!=''">
                AND pb.BREED_NAME like #{filterMap.breedName}
            </if>
            <if test="filterMap.featureName!=null and filterMap.featureName!=''">
                AND pf.FEATURE_NAME like #{filterMap.featureName}
            </if>
            <if test="filterMap.unit!=null and filterMap.unit!=''">
                AND STOCK.UNIT like #{filterMap.unit}
            </if>
            <if test="filterMap.pdCode!=null and filterMap.pdCode!=''">
                AND STOCK.PD_CODE like #{filterMap.pdCode}
            </if>
            <if test="filterMap.pdName!=null and filterMap.pdName!=''">
                AND STOCK.PD_NAME like #{filterMap.pdName}
            </if>
            <if test="filterMap.lgcsName!=null and filterMap.lgcsName!=''">
                AND STOCK.LGCS_NAME like #{filterMap.lgcsName}
            </if>
            <if test="filterMap.slCode!=null and filterMap.slCode!=''">
                AND STOCK.SL_CODE = #{filterMap.slCode}
            </if>
            <if test="filterMap.lgcsCode!=null and filterMap.lgcsCode!=''">
                AND STOCK.LGCS_CODE = #{filterMap.lgcsCode}
            </if>
            <if test="filterMap.salePlatform!=null and filterMap.salePlatform!=''">
                AND STOCK.SALE_PLATFORM = #{filterMap.salePlatform}
            </if>
    </sql>
    <sql id="whereConditionSp">
        <where>
            <if test="filterMap.classesName!=null and filterMap.classesName!=''">
                AND CLASSES_NAME like #{filterMap.classesName}
            </if>
            <if test="filterMap.breedName!=null and filterMap.breedName!=''">
                AND BREED_NAME like #{filterMap.breedName}
            </if>
            <if test="filterMap.featureName!=null and filterMap.featureName!=''">
                AND FEATURE_NAME like #{filterMap.featureName}
            </if>
            <if test="filterMap.unit!=null and filterMap.unit!=''">
                AND UNIT like #{filterMap.unit}
            </if>
            <if test="filterMap.pdCode!=null and filterMap.pdCode!=''">
                AND PD_CODE like #{filterMap.pdCode}
            </if>
            <if test="filterMap.pdName!=null and filterMap.pdName!=''">
                AND PD_NAME like #{filterMap.pdName}
            </if>
            <if test="filterMap.lgcsName!=null and filterMap.lgcsName!=''">
                AND LGCS_NAME like #{filterMap.lgcsName}
            </if>
            <if test="filterMap.slCode!=null and filterMap.slCode!=''">
                AND SL_CODE = #{filterMap.slCode}
            </if>
            <if test="filterMap.lgcsCode!=null and filterMap.lgcsCode!=''">
                AND LGCS_CODE = #{filterMap.lgcsCode}
            </if>
            <if test="filterMap.supplyPlatform!=null and filterMap.supplyPlatform!=''">
                AND SUPPLY_PLATFORM = #{filterMap.supplyPlatform}
            </if>
        </where>
    </sql>
    <select id="findSuppStockList" parameterType="BasePageParam" resultType="com.msk.so.bean.SuppStock">
        SELECT
        <include refid="selectSqlSp"/>
        ,10 AS price
        ,0 AS activeQty
        ,'10' AS priceCyclePeriod
        ,'0' AS orderLevelCode
        ,'0' AS orderLevelName
        ,IFNULL(MD.LGCSNAME,'') AS lgcsName
        FROM SO_STOCK_SP AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        <include refid="whereConditionSp" />
        ORDER BY STOCK.STOCK_ID
        <if test="paging==true">
            LIMIT #{startPos},#{pageSize}
        </if>
    </select>
    <select id="findProductStockList" parameterType="BasePageParam" resultType="com.msk.so.bean.ProductStock">
        SELECT
        <include refid="selectSqlSl"/>
        ,0 AS price
        ,0 AS activeQty
        ,'0' AS priceCyclePeriod
        ,'0' AS orderLevelCode
        ,'0' AS orderLevelName
        ,IFNULL(MD.LGCSNAME,'') AS lgcsName
        ,STOCK.STOCK_QTY - IFNULL(a.ORDER_QTY, '0') AS invQty
        FROM SO_STOCK_SL AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        LEFT JOIN (
        SELECT
        sod.PD_CODE AS pdCode,
        SUM(sod.ORDER_QTY) - SUM(IFNULL(sod.cancel_qty, 0)) AS ORDER_QTY
        FROM
        SO_ORDER_DETAIL sod
        INNER JOIN so_order so ON so.order_id = sod.order_id
        WHERE
        (
        so.SELLER_CODE = #{filterMap.slCode}
        OR (
        so.ORDER_TYPE IN (5, 6)
        AND #{filterMap.slCode} = '0000000'
        )
        )
        AND so.ORDER_STATUS != '99'
        AND so.ORDER_TYPE NOT IN (4, 7)
        GROUP BY
        sod.PD_CODE
        ) a ON a.pdCode = STOCK.pd_code
        LEFT JOIN PD_CLASSES PC ON SUBSTRING(STOCK.pd_code, 1, 2) = PC.CLASSES_CODE
        LEFT JOIN PD_MACHINING PM ON SUBSTRING(STOCK.pd_code, 1, 3) = PM.CLASSESTREE_CODE
        LEFT JOIN PD_BREED PB ON SUBSTRING(STOCK.pd_code, 1, 5) = PB.CLASSESTREE_CODE
        LEFT JOIN PD_FEATURE PF ON SUBSTRING(STOCK.pd_code, 1, 7) = PF.CLASSESTREE_CODE
        LEFT JOIN PD_WEIGHT PW ON SUBSTRING(STOCK.pd_code, 1, 9) = PW.CLASSESTREE_CODE
        LEFT JOIN PD_GRADE PG ON SUBSTRING(STOCK.pd_code, 10, 1) = PG.GRADE_CODE
        WHERE STOCK.DEL_FLG = 0
        <include refid="whereCondition" />
        ORDER BY STOCK.STOCK_ID
        <if test="paging==true">
            LIMIT #{startPos},#{pageSize}
        </if>
    </select>

    <select id="findNormsInfo" parameterType="com.msk.so.bean.StockParam" resultType="com.msk.core.entity.PdNormsStd">
        select
        a.NORMS_OUT AS normsOut
        , a.NORMS_VOLUME AS normsVolume
        , a.NETWEIGHT_OUT AS netWeightOut
        from
        pd_norms_std a
        left join pd_standard b
        on a.STANDARD_ID = b.STANDARD_ID
        where
        b.CLASSESTREE_CODE = SUBSTRING(#{pdCode},1,9)
    </select>

    <select id="countProductStock" parameterType="BasePageParam" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM SO_STOCK_SL AS STOCK
        LEFT JOIN PD_CLASSES PC ON SUBSTRING(STOCK.pd_code, 1, 2) = PC.CLASSES_CODE
        LEFT JOIN PD_MACHINING PM ON SUBSTRING(STOCK.pd_code, 1, 3) = PM.CLASSESTREE_CODE
        LEFT JOIN PD_BREED PB ON SUBSTRING(STOCK.pd_code, 1, 5) = PB.CLASSESTREE_CODE
        LEFT JOIN PD_FEATURE PF ON SUBSTRING(STOCK.pd_code, 1, 7) = PF.CLASSESTREE_CODE
        LEFT JOIN PD_WEIGHT PW ON SUBSTRING(STOCK.pd_code, 1, 9) = PW.CLASSESTREE_CODE
        LEFT JOIN PD_GRADE PG ON SUBSTRING(STOCK.pd_code, 10, 1) = PG.GRADE_CODE
        WHERE STOCK.DEL_FLG = 0
        <include refid="whereCondition" />
    </select>
    <select id="countSuppStock" parameterType="BasePageParam" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM SO_STOCK_SP AS STOCK
        <include refid="whereConditionSp" />
    </select>
    <!--数据插入 -->
    <insert id="save" parameterType="com.msk.core.entity.SoOrderDetailAvailability">
        INSERT INTO so_order_detail_availability
        (
        <if test="orderId!=null">
            ORDER_ID,
        </if>
        <if test="orderCode!=null">
            ORDER_CODE,
        </if>
        <if test="orderDetailId!=null">
            ORDER_DETAIL_ID,
        </if>
        <if test="orderDetailAvailabilityId!=null">
            ORDER_DETAIL_AVAILABILITY_ID,
        </if>
        <if test="supplierCode!=null">
            SUPPLIER_CODE,
        </if>
        <if test="supplierName!=null">
            SUPPLIER_NAME,
        </if>
        <if test="classesCode!=null">
            CLASSES_CODE,
        </if>
        <if test="classesName!=null">
            CLASSES_NAME,
        </if>
        <if test="breedCode!=null">
            BREED_CODE,
        </if>
        <if test="breedName!=null">
            BREED_NAME,
        </if>
        <if test="featureCode!=null">
            FEATURE_CODE,
        </if>
        <if test="featureName!=null">
            FEATURE_NAME,
        </if>
        <if test="normsCode!=null">
            NORMS_CODE,
        </if>
        <if test="normsName!=null">
            NORMS_NAME,
        </if>
        <if test="pdCode!=null">
            PD_CODE,
        </if>
        <if test="pdName!=null">
            PD_NAME,
        </if>
        <if test="pdLevel!=null">
            PD_LEVEL,
        </if>
        <if test="pdGradeCode!=null">
            PD_GRADE_CODE,
        </if>
        <if test="pdGradeName!=null">
            PD_GRADE_NAME,
        </if>
        <if test="unit!=null">
            UNIT,
        </if>
        <if test="packingVolume!=null">
            PACKING_VOLUME,
        </if>
        <if test="weight!=null">
            WEIGHT,
        </if>
        <if test="volume!=null">
            VOLUME,
        </if>
        <if test="suppQty!=null">
            SUPP_QTY,
        </if>
        <if test="sendQty!=null">
            SEND_QTY,
        </if>
        <if test="receiveQty!=null">
            RECEIVE_QTY,
        </if>
        <if test="cancelQty!=null">
            CANCEL_QTY,
        </if>
        <if test="returnQty!=null">
            RETURN_QTY,
        </if>
        <if test="sendTime!=null">
            SEND_TIME,
        </if>
        <if test="receivedTime!=null">
            RECEIVED_TIME,
        </if>
        <if test="status!=null">
            STATUS
        </if>
        ,DEL_FLG,
        CRT_TIME,
        VER
        )
        VALUES
        (
        <if test="orderId!=null">
            #{orderId},
        </if>
        <if test="orderCode!=null">
            #{orderCode},
        </if>
        <if test="orderDetailId!=null">
            #{orderDetailId},
        </if>
        <if test="orderDetailAvailabilityId!=null">
            #{orderDetailAvailabilityId},
        </if>
        <if test="supplierCode!=null">
            #{supplierCode},
        </if>
        <if test="supplierName!=null">
            #{supplierName},
        </if>
        <if test="classesCode!=null">
            #{classesCode},
        </if>
        <if test="classesName!=null">
            #{classesName},
        </if>
        <if test="breedCode!=null">
            #{breedCode},
        </if>
        <if test="breedName!=null">
            #{breedName},
        </if>
        <if test="featureCode!=null">
            #{featureCode},
        </if>
        <if test="featureName!=null">
            #{featureName},
        </if>
        <if test="normsCode!=null">
            #{normsCode},
        </if>
        <if test="normsName!=null">
            #{normsName},
        </if>
        <if test="pdCode!=null">
            #{pdCode},
        </if>
        <if test="pdName!=null">
            #{pdName},
        </if>
        <if test="pdLevel!=null">
            #{pdLevel},
        </if>
        <if test="pdGradeCode!=null">
            #{pdGradeCode},
        </if>
        <if test="pdGradeName!=null">
            #{pdGradeName},
        </if>
        <if test="unit!=null">
            #{unit},
        </if>
        <if test="packingVolume!=null">
            #{packingVolume},
        </if>
        <if test="weight!=null">
            #{weight},
        </if>
        <if test="volume!=null">
            #{volume},
        </if>
        <if test="suppQty!=null">
            #{suppQty},
        </if>
        <if test="sendQty!=null">
            #{sendQty},
        </if>
        <if test="receiveQty!=null">
            #{receiveQty},
        </if>
        <if test="cancelQty!=null">
            #{cancelQty},
        </if>
        <if test="returnQty!=null">
            #{returnQty},
        </if>
        <if test="sendTime!=null">
            #{sendTime},
        </if>
        <if test="receivedTime!=null">
            #{receivedTime},
        </if>
        <if test="status!=null">
            #{status},
        </if>
        #{delFlg},
        #{crtTime},
        #{ver}
        )
    </insert>


    <sql id="selectSqlSl2">
        STOCK_ID AS stockId,
        IFNULL(LGCS_CODE,'') AS lgcsCode,
        IFNULL(LGCSNAME,'') AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        STOCK_TYPE AS stockType,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        IFNULL(STOCK.CLASSES_CODE,'') AS classesCode,
        IFNULL(STOCK.CLASSES_NAME,'') AS classesName,
        IFNULL(STOCK.BREED_CODE,'') AS breedCode,
        IFNULL(STOCK.BREED_NAME,'') AS breedName,
        IFNULL(STOCK.FEATURE_CODE,'') AS featureCode,
        IFNULL(STOCK.FEATURE_NAME,'') AS featureName,
        IFNULL(STOCK.NORMS_CODE,'') AS normsCode,
        IFNULL(STOCK.NORMS_NAME,'') AS normsName,
        IFNULL(PD_CODE,'') AS pdCode,
        IFNULL(PD_NAME,'') AS pdName,
        PD_LEVEL AS pdLevel,
        IFNULL(UNIT,'') AS unit,
        PACKING_VOLUME AS packingVolume,
        STOCK_QTY AS stockQty
    </sql>
    <sql id="selectSqlSp2">
        STOCK_ID AS stockId,
        IFNULL(LGCS_CODE,'') AS lgcsCode,
        IFNULL(LGCSNAME,'') AS lgcsName,
        WAREHOUSE_CODE AS warehouseCode,
        WAREHOUSE_NAME AS warehouseName,
        SUPPLY_PLATFORM AS supplyPlatform,
        STOCK_TYPE AS stockType,
        SOURCE_SL_CODE AS sourceSlCode,
        SOURCE_SL_NAME AS sourceSlName,
        SL_CODE AS slCode,
        SL_NAME AS slName,
        IFNULL(STOCK.CLASSES_CODE,'') AS classesCode,
        IFNULL(STOCK.CLASSES_NAME,'') AS classesName,
         IFNULL(SUPPLIER_CODE,'') AS supplierCode,
        IFNULL(SUPPLIER_NAME,'') AS supplierName,
        IFNULL(STOCK.BREED_CODE,'') AS breedCode,
        IFNULL(STOCK.BREED_NAME,'') AS breedName,
        IFNULL(STOCK.FEATURE_CODE,'') AS featureCode,
        IFNULL(STOCK.FEATURE_NAME,'') AS featureName,
        IFNULL(STOCK.NORMS_CODE,'') AS normsCode,
        IFNULL(STOCK.NORMS_NAME,'') AS normsName,
        IFNULL(PD_CODE,'') AS pdCode,
        IFNULL(PD_NAME,'') AS pdName,
        PD_LEVEL AS pdLevel,
        IFNULL(UNIT,'') AS unit,
        PACKING_VOLUME AS packingVolume,
        WEIGHT AS weight,
        VOLUME AS volume,
        STOCK_QTY AS stockQty
    </sql>
    <!--条件 -->
    <sql id="whereCondition2">
        <where>
            <if test="filterMap.classesName!=null and filterMap.classesName!=''">
                AND STOCK.CLASSES_NAME like #{filterMap.classesName}
            </if>
            <if test="filterMap.breedName!=null and filterMap.breedName!=''">
                AND STOCK.BREED_NAME like #{filterMap.breedName}
            </if>
            <if test="filterMap.featureName!=null and filterMap.featureName!=''">
                AND STOCK.FEATURE_NAME like #{filterMap.featureName}
            </if>
            <if test="filterMap.unit!=null and filterMap.unit!=''">
                AND UNIT like #{filterMap.unit}
            </if>
            <if test="filterMap.pdCode!=null and filterMap.pdCode!=''">
                AND PD_CODE like #{filterMap.pdCode}
            </if>
            <if test="filterMap.pdName!=null and filterMap.pdName!=''">
                AND PD_NAME like #{filterMap.pdName}
            </if>
            <if test="filterMap.lgcsName!=null and filterMap.lgcsName!=''">
                AND LGCS_NAME like #{filterMap.lgcsName}
            </if>
            <if test="filterMap.slCode!=null and filterMap.slCode!=''">
                AND SL_CODE = #{filterMap.slCode}
            </if>
            <if test="filterMap.lgcsCode!=null and filterMap.lgcsCode!=''">
                AND LGCS_CODE = #{filterMap.lgcsCode}
            </if>
            <if test="filterMap.salePlatform!=null and filterMap.salePlatform!=''">
                AND SALE_PLATFORM = #{filterMap.salePlatform}
            </if>

        </where>
    </sql>
    <sql id="whereConditionSp2">
        <where>
            <if test="filterMap.classesName!=null and filterMap.classesName!=''">
                AND STOCK.CLASSES_NAME like #{filterMap.classesName}
            </if>
            <if test="filterMap.breedName!=null and filterMap.breedName!=''">
                AND STOCK.BREED_NAME like #{filterMap.breedName}
            </if>
            <if test="filterMap.featureName!=null and filterMap.featureName!=''">
                AND STOCK.FEATURE_NAME like #{filterMap.featureName}
            </if>
            <if test="filterMap.unit!=null and filterMap.unit!=''">
                AND UNIT like #{filterMap.unit}
            </if>
            <if test="filterMap.pdCode!=null and filterMap.pdCode!=''">
                AND PD_CODE like #{filterMap.pdCode}
            </if>
            <if test="filterMap.pdName!=null and filterMap.pdName!=''">
                AND PD_NAME like #{filterMap.pdName}
            </if>
            <if test="filterMap.lgcsName!=null and filterMap.lgcsName!=''">
                AND LGCS_NAME like #{filterMap.lgcsName}
            </if>
            <if test="filterMap.slCode!=null and filterMap.slCode!=''">
                AND SL_CODE = #{filterMap.slCode}
            </if>
            <if test="filterMap.lgcsCode!=null and filterMap.lgcsCode!=''">
                AND LGCS_CODE = #{filterMap.lgcsCode}
            </if>
            <if test="filterMap.supplyPlatform!=null and filterMap.supplyPlatform!=''">
                AND SUPPLY_PLATFORM = #{filterMap.supplyPlatform}
            </if>
        </where>
    </sql>
    <select id="findSuppStockList2" parameterType="BasePageParam" resultType="com.msk.so.bean.SuppStock">
        SELECT
        <include refid="selectSqlSp2"/>
        ,PL.PRICEOFBOX AS price
        ,PL.PRICECYCLE_ID  AS  pricecycleId
        ,0 AS activeQty
        ,'10' AS priceCyclePeriod
        ,'1' AS orderLevelCode
        ,'1' AS orderLevelName
        ,IFNULL(MD.LGCSNAME,'') AS lgcsName
        FROM SO_STOCK_SP AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        INNER JOIN PD_PRICEPRD_LOGIAREA PL
        ON STOCK.PD_CODE = PL.PDT_MIXCODE AND STOCK.LGCS_CODE=PL.LOGIAREA_CODE
        <include refid="whereConditionSp2" />
        ORDER BY PL.PRICECYCLE_ID
        <if test="paging==true">
            LIMIT #{startPos},#{pageSize}
        </if>
    </select>
    <select id="findProductStockList2" parameterType="BasePageParam" resultType="com.msk.so.bean.ProductStock">
        SELECT
        <include refid="selectSqlSl2"/>
        ,PL.PRICEOFBOX AS price
        ,PL.PRICECYCLE_ID  AS  pricecycleId
        ,0 AS activeQty
        ,'10' AS priceCyclePeriod
        ,'0' AS orderLevelCode
        ,'1' AS orderLevelName
        ,IFNULL(MD.LGCSNAME,'') AS lgcsName
        FROM SO_STOCK_SL AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        INNER JOIN PD_PRICEPRD_LOGIAREA PL
        ON STOCK.PD_CODE = PL.PDT_MIXCODE AND STOCK.LGCS_CODE=PL.LOGIAREA_CODE
        <include refid="whereCondition2" />
        ORDER BY PL.PRICECYCLE_ID
        <if test="paging==true">
            LIMIT #{startPos},#{pageSize}
        </if>
    </select>
    <select id="countProductStock2" parameterType="BasePageParam" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM SO_STOCK_SL AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        INNER JOIN PD_PRICEPRD_LOGIAREA PL
        ON STOCK.PD_CODE = PL.PDT_MIXCODE AND STOCK.LGCS_CODE=PL.LOGIAREA_CODE
        <include refid="whereCondition2" />
    </select>
    <select id="countSuppStock2" parameterType="BasePageParam" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM SO_STOCK_SP AS STOCK
        INNER JOIN (SELECT LGCS_AREA_CODE AS LGCSCODE,LGCS_AREA_NAME AS LGCSNAME FROM MD_LOGISTICS_AREA) AS MD
        ON  MD.LGCSCODE = STOCK.LGCS_CODE
        INNER JOIN PD_PRICEPRD_LOGIAREA PL
        ON STOCK.PD_CODE = PL.PDT_MIXCODE AND STOCK.LGCS_CODE=PL.LOGIAREA_CODE
        <include refid="whereConditionSp2" />
    </select>



</mapper>
